#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Live_ReviewsDatabaseFull")]
	public partial class RushmoreSPValidationEngineDALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertt_FieldValidation(t_FieldValidation instance);
    partial void Updatet_FieldValidation(t_FieldValidation instance);
    partial void Deletet_FieldValidation(t_FieldValidation instance);
    partial void Insertt_FieldValidationErrorCode(t_FieldValidationErrorCode instance);
    partial void Updatet_FieldValidationErrorCode(t_FieldValidationErrorCode instance);
    partial void Deletet_FieldValidationErrorCode(t_FieldValidationErrorCode instance);
    partial void Insertt_FieldValidationLevel(t_FieldValidationLevel instance);
    partial void Updatet_FieldValidationLevel(t_FieldValidationLevel instance);
    partial void Deletet_FieldValidationLevel(t_FieldValidationLevel instance);
    partial void Insertt_FieldValidationRelated(t_FieldValidationRelated instance);
    partial void Updatet_FieldValidationRelated(t_FieldValidationRelated instance);
    partial void Deletet_FieldValidationRelated(t_FieldValidationRelated instance);
    partial void Insertt_Operator(t_Operator instance);
    partial void Updatet_Operator(t_Operator instance);
    partial void Deletet_Operator(t_Operator instance);
    partial void InserttLkp_Group(tLkp_Group instance);
    partial void UpdatetLkp_Group(tLkp_Group instance);
    partial void DeletetLkp_Group(tLkp_Group instance);
    partial void Insertt_Country(t_Country instance);
    partial void Updatet_Country(t_Country instance);
    partial void Deletet_Country(t_Country instance);
    partial void InserttLkp_Company(tLkp_Company instance);
    partial void UpdatetLkp_Company(tLkp_Company instance);
    partial void DeletetLkp_Company(tLkp_Company instance);
    partial void InserttLnk_RigNameType(tLnk_RigNameType instance);
    partial void UpdatetLnk_RigNameType(tLnk_RigNameType instance);
    partial void DeletetLnk_RigNameType(tLnk_RigNameType instance);
    partial void Insertt_RigName(t_RigName instance);
    partial void Updatet_RigName(t_RigName instance);
    partial void Deletet_RigName(t_RigName instance);
    partial void InserttLkp_ExchangeRate(tLkp_ExchangeRate instance);
    partial void UpdatetLkp_ExchangeRate(tLkp_ExchangeRate instance);
    partial void DeletetLkp_ExchangeRate(tLkp_ExchangeRate instance);
    partial void InserttLkp_Region(tLkp_Region instance);
    partial void UpdatetLkp_Region(tLkp_Region instance);
    partial void DeletetLkp_Region(tLkp_Region instance);
    partial void Insertt_StagingWell(t_StagingWell instance);
    partial void Updatet_StagingWell(t_StagingWell instance);
    partial void Deletet_StagingWell(t_StagingWell instance);
    partial void InserttDPR_StagingWellData(tDPR_StagingWellData instance);
    partial void UpdatetDPR_StagingWellData(tDPR_StagingWellData instance);
    partial void DeletetDPR_StagingWellData(tDPR_StagingWellData instance);
    partial void InserttLkp_RigType(tLkp_RigType instance);
    partial void UpdatetLkp_RigType(tLkp_RigType instance);
    partial void DeletetLkp_RigType(tLkp_RigType instance);
    #endregion
		
		public RushmoreSPValidationEngineDALDataContext() : 
				base(global::ConsoleApplication1.Properties.Settings.Default.Live_ReviewsDatabaseFullConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RushmoreSPValidationEngineDALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RushmoreSPValidationEngineDALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RushmoreSPValidationEngineDALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RushmoreSPValidationEngineDALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<t_FieldValidation> t_FieldValidations
		{
			get
			{
				return this.GetTable<t_FieldValidation>();
			}
		}
		
		public System.Data.Linq.Table<t_FieldValidationErrorCode> t_FieldValidationErrorCodes
		{
			get
			{
				return this.GetTable<t_FieldValidationErrorCode>();
			}
		}
		
		public System.Data.Linq.Table<t_FieldValidationLevel> t_FieldValidationLevels
		{
			get
			{
				return this.GetTable<t_FieldValidationLevel>();
			}
		}
		
		public System.Data.Linq.Table<t_FieldValidationRelated> t_FieldValidationRelateds
		{
			get
			{
				return this.GetTable<t_FieldValidationRelated>();
			}
		}
		
		public System.Data.Linq.Table<t_Operator> t_Operators
		{
			get
			{
				return this.GetTable<t_Operator>();
			}
		}
		
		public System.Data.Linq.Table<tLkp_Group> tLkp_Groups
		{
			get
			{
				return this.GetTable<tLkp_Group>();
			}
		}
		
		public System.Data.Linq.Table<t_Country> t_Countries
		{
			get
			{
				return this.GetTable<t_Country>();
			}
		}
		
		public System.Data.Linq.Table<tLkp_Company> tLkp_Companies
		{
			get
			{
				return this.GetTable<tLkp_Company>();
			}
		}
		
		public System.Data.Linq.Table<tLnk_RigNameType> tLnk_RigNameTypes
		{
			get
			{
				return this.GetTable<tLnk_RigNameType>();
			}
		}
		
		public System.Data.Linq.Table<t_RigName> t_RigNames
		{
			get
			{
				return this.GetTable<t_RigName>();
			}
		}
		
		public System.Data.Linq.Table<tLkp_ExchangeRate> tLkp_ExchangeRates
		{
			get
			{
				return this.GetTable<tLkp_ExchangeRate>();
			}
		}
		
		public System.Data.Linq.Table<tLkp_Region> tLkp_Regions
		{
			get
			{
				return this.GetTable<tLkp_Region>();
			}
		}
		
		public System.Data.Linq.Table<v_ParticipatingOperator> v_ParticipatingOperators
		{
			get
			{
				return this.GetTable<v_ParticipatingOperator>();
			}
		}
		
		public System.Data.Linq.Table<v_ListCountriesInUse> v_ListCountriesInUses
		{
			get
			{
				return this.GetTable<v_ListCountriesInUse>();
			}
		}
		
		public System.Data.Linq.Table<t_StagingWell> t_StagingWells
		{
			get
			{
				return this.GetTable<t_StagingWell>();
			}
		}
		
		public System.Data.Linq.Table<tDPR_StagingWellData> tDPR_StagingWellDatas
		{
			get
			{
				return this.GetTable<tDPR_StagingWellData>();
			}
		}
		
		public System.Data.Linq.Table<tLkp_RigType> tLkp_RigTypes
		{
			get
			{
				return this.GetTable<tLkp_RigType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_FieldValidation")]
	public partial class t_FieldValidation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ValidationID;
		
		private string _UniqueID;
		
		private string _AssemblyName;
		
		private string _ValidationXML;
		
		private int _LevelID;
		
		private EntitySet<t_FieldValidationRelated> _t_FieldValidationRelateds;
		
		private EntityRef<t_FieldValidationLevel> _t_FieldValidationLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValidationIDChanging(int value);
    partial void OnValidationIDChanged();
    partial void OnUniqueIDChanging(string value);
    partial void OnUniqueIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnValidationXMLChanging(string value);
    partial void OnValidationXMLChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    #endregion
		
		public t_FieldValidation()
		{
			this._t_FieldValidationRelateds = new EntitySet<t_FieldValidationRelated>(new Action<t_FieldValidationRelated>(this.attach_t_FieldValidationRelateds), new Action<t_FieldValidationRelated>(this.detach_t_FieldValidationRelateds));
			this._t_FieldValidationLevel = default(EntityRef<t_FieldValidationLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ValidationID
		{
			get
			{
				return this._ValidationID;
			}
			set
			{
				if ((this._ValidationID != value))
				{
					this.OnValidationIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationID = value;
					this.SendPropertyChanged("ValidationID");
					this.OnValidationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(250)")]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationXML", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ValidationXML
		{
			get
			{
				return this._ValidationXML;
			}
			set
			{
				if ((this._ValidationXML != value))
				{
					this.OnValidationXMLChanging(value);
					this.SendPropertyChanging();
					this._ValidationXML = value;
					this.SendPropertyChanged("ValidationXML");
					this.OnValidationXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._t_FieldValidationLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_FieldValidation_t_FieldValidationRelated", Storage="_t_FieldValidationRelateds", ThisKey="ValidationID", OtherKey="ValidationID")]
		public EntitySet<t_FieldValidationRelated> t_FieldValidationRelateds
		{
			get
			{
				return this._t_FieldValidationRelateds;
			}
			set
			{
				this._t_FieldValidationRelateds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_FieldValidationLevel_t_FieldValidation", Storage="_t_FieldValidationLevel", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public t_FieldValidationLevel t_FieldValidationLevel
		{
			get
			{
				return this._t_FieldValidationLevel.Entity;
			}
			set
			{
				t_FieldValidationLevel previousValue = this._t_FieldValidationLevel.Entity;
				if (((previousValue != value) 
							|| (this._t_FieldValidationLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._t_FieldValidationLevel.Entity = null;
						previousValue.t_FieldValidations.Remove(this);
					}
					this._t_FieldValidationLevel.Entity = value;
					if ((value != null))
					{
						value.t_FieldValidations.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("t_FieldValidationLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_FieldValidationRelateds(t_FieldValidationRelated entity)
		{
			this.SendPropertyChanging();
			entity.t_FieldValidation = this;
		}
		
		private void detach_t_FieldValidationRelateds(t_FieldValidationRelated entity)
		{
			this.SendPropertyChanging();
			entity.t_FieldValidation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_FieldValidationErrorCode")]
	public partial class t_FieldValidationErrorCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorID;
		
		private string _ErrorMessage;
		
		private int _FieldNumber;
		
		private string _ErrorCode;
		
		private string _AssemblyName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnFieldNumberChanging(int value);
    partial void OnFieldNumberChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    #endregion
		
		public t_FieldValidationErrorCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorID
		{
			get
			{
				return this._ErrorID;
			}
			set
			{
				if ((this._ErrorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldNumber", DbType="Int NOT NULL")]
		public int FieldNumber
		{
			get
			{
				return this._FieldNumber;
			}
			set
			{
				if ((this._FieldNumber != value))
				{
					this.OnFieldNumberChanging(value);
					this.SendPropertyChanging();
					this._FieldNumber = value;
					this.SendPropertyChanged("FieldNumber");
					this.OnFieldNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_FieldValidationLevel")]
	public partial class t_FieldValidationLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private string _LevelName;
		
		private EntitySet<t_FieldValidation> _t_FieldValidations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnLevelNameChanging(string value);
    partial void OnLevelNameChanged();
    #endregion
		
		public t_FieldValidationLevel()
		{
			this._t_FieldValidations = new EntitySet<t_FieldValidation>(new Action<t_FieldValidation>(this.attach_t_FieldValidations), new Action<t_FieldValidation>(this.detach_t_FieldValidations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LevelName
		{
			get
			{
				return this._LevelName;
			}
			set
			{
				if ((this._LevelName != value))
				{
					this.OnLevelNameChanging(value);
					this.SendPropertyChanging();
					this._LevelName = value;
					this.SendPropertyChanged("LevelName");
					this.OnLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_FieldValidationLevel_t_FieldValidation", Storage="_t_FieldValidations", ThisKey="LevelID", OtherKey="LevelID")]
		public EntitySet<t_FieldValidation> t_FieldValidations
		{
			get
			{
				return this._t_FieldValidations;
			}
			set
			{
				this._t_FieldValidations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_FieldValidations(t_FieldValidation entity)
		{
			this.SendPropertyChanging();
			entity.t_FieldValidationLevel = this;
		}
		
		private void detach_t_FieldValidations(t_FieldValidation entity)
		{
			this.SendPropertyChanging();
			entity.t_FieldValidationLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_FieldValidationRelated")]
	public partial class t_FieldValidationRelated : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelatedAttributeID;
		
		private int _ValidationID;
		
		private string _Attribute;
		
		private EntityRef<t_FieldValidation> _t_FieldValidation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelatedAttributeIDChanging(int value);
    partial void OnRelatedAttributeIDChanged();
    partial void OnValidationIDChanging(int value);
    partial void OnValidationIDChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    #endregion
		
		public t_FieldValidationRelated()
		{
			this._t_FieldValidation = default(EntityRef<t_FieldValidation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedAttributeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelatedAttributeID
		{
			get
			{
				return this._RelatedAttributeID;
			}
			set
			{
				if ((this._RelatedAttributeID != value))
				{
					this.OnRelatedAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedAttributeID = value;
					this.SendPropertyChanged("RelatedAttributeID");
					this.OnRelatedAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationID", DbType="Int NOT NULL")]
		public int ValidationID
		{
			get
			{
				return this._ValidationID;
			}
			set
			{
				if ((this._ValidationID != value))
				{
					if (this._t_FieldValidation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationID = value;
					this.SendPropertyChanged("ValidationID");
					this.OnValidationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_FieldValidation_t_FieldValidationRelated", Storage="_t_FieldValidation", ThisKey="ValidationID", OtherKey="ValidationID", IsForeignKey=true)]
		public t_FieldValidation t_FieldValidation
		{
			get
			{
				return this._t_FieldValidation.Entity;
			}
			set
			{
				t_FieldValidation previousValue = this._t_FieldValidation.Entity;
				if (((previousValue != value) 
							|| (this._t_FieldValidation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._t_FieldValidation.Entity = null;
						previousValue.t_FieldValidationRelateds.Remove(this);
					}
					this._t_FieldValidation.Entity = value;
					if ((value != null))
					{
						value.t_FieldValidationRelateds.Add(this);
						this._ValidationID = value.ValidationID;
					}
					else
					{
						this._ValidationID = default(int);
					}
					this.SendPropertyChanged("t_FieldValidation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Operator")]
	public partial class t_Operator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private string _BusinessUnit;
		
		private System.Nullable<int> _CountryID;
		
		private bool _WebLogin;
		
		private bool _HeadOffice;
		
		private int _GroupID;
		
		private string _FullOperatorName;
		
		private string _PreviousOperatorName;
		
		private string _KeyMessage;
		
		private System.Nullable<byte> _StageID;
		
		private string _WebAddress;
		
		private System.Nullable<System.DateTime> _KeyMessageChangeDate;
		
		private System.Nullable<int> _KeyMessageChangedBy;
		
		private EntityRef<tLkp_Group> _tLkp_Group;
		
		private EntityRef<t_Country> _t_Country;
		
		private EntityRef<tLkp_Company> _tLkp_Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnBusinessUnitChanging(string value);
    partial void OnBusinessUnitChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnWebLoginChanging(bool value);
    partial void OnWebLoginChanged();
    partial void OnHeadOfficeChanging(bool value);
    partial void OnHeadOfficeChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnFullOperatorNameChanging(string value);
    partial void OnFullOperatorNameChanged();
    partial void OnPreviousOperatorNameChanging(string value);
    partial void OnPreviousOperatorNameChanged();
    partial void OnKeyMessageChanging(string value);
    partial void OnKeyMessageChanged();
    partial void OnStageIDChanging(System.Nullable<byte> value);
    partial void OnStageIDChanged();
    partial void OnWebAddressChanging(string value);
    partial void OnWebAddressChanged();
    partial void OnKeyMessageChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnKeyMessageChangeDateChanged();
    partial void OnKeyMessageChangedByChanging(System.Nullable<int> value);
    partial void OnKeyMessageChangedByChanged();
    #endregion
		
		public t_Operator()
		{
			this._tLkp_Group = default(EntityRef<tLkp_Group>);
			this._t_Country = default(EntityRef<t_Country>);
			this._tLkp_Company = default(EntityRef<tLkp_Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._tLkp_Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnit", DbType="NVarChar(50)")]
		public string BusinessUnit
		{
			get
			{
				return this._BusinessUnit;
			}
			set
			{
				if ((this._BusinessUnit != value))
				{
					this.OnBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnit = value;
					this.SendPropertyChanged("BusinessUnit");
					this.OnBusinessUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._t_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebLogin", DbType="Bit NOT NULL")]
		public bool WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this.OnWebLoginChanging(value);
					this.SendPropertyChanging();
					this._WebLogin = value;
					this.SendPropertyChanged("WebLogin");
					this.OnWebLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOffice", DbType="Bit NOT NULL")]
		public bool HeadOffice
		{
			get
			{
				return this._HeadOffice;
			}
			set
			{
				if ((this._HeadOffice != value))
				{
					this.OnHeadOfficeChanging(value);
					this.SendPropertyChanging();
					this._HeadOffice = value;
					this.SendPropertyChanged("HeadOffice");
					this.OnHeadOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._tLkp_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullOperatorName", DbType="NVarChar(200)")]
		public string FullOperatorName
		{
			get
			{
				return this._FullOperatorName;
			}
			set
			{
				if ((this._FullOperatorName != value))
				{
					this.OnFullOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._FullOperatorName = value;
					this.SendPropertyChanged("FullOperatorName");
					this.OnFullOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousOperatorName", DbType="NVarChar(200)")]
		public string PreviousOperatorName
		{
			get
			{
				return this._PreviousOperatorName;
			}
			set
			{
				if ((this._PreviousOperatorName != value))
				{
					this.OnPreviousOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._PreviousOperatorName = value;
					this.SendPropertyChanged("PreviousOperatorName");
					this.OnPreviousOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyMessage", DbType="VarChar(1000)")]
		public string KeyMessage
		{
			get
			{
				return this._KeyMessage;
			}
			set
			{
				if ((this._KeyMessage != value))
				{
					this.OnKeyMessageChanging(value);
					this.SendPropertyChanging();
					this._KeyMessage = value;
					this.SendPropertyChanged("KeyMessage");
					this.OnKeyMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StageID", DbType="TinyInt")]
		public System.Nullable<byte> StageID
		{
			get
			{
				return this._StageID;
			}
			set
			{
				if ((this._StageID != value))
				{
					this.OnStageIDChanging(value);
					this.SendPropertyChanging();
					this._StageID = value;
					this.SendPropertyChanged("StageID");
					this.OnStageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAddress", DbType="VarChar(100)")]
		public string WebAddress
		{
			get
			{
				return this._WebAddress;
			}
			set
			{
				if ((this._WebAddress != value))
				{
					this.OnWebAddressChanging(value);
					this.SendPropertyChanging();
					this._WebAddress = value;
					this.SendPropertyChanged("WebAddress");
					this.OnWebAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyMessageChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> KeyMessageChangeDate
		{
			get
			{
				return this._KeyMessageChangeDate;
			}
			set
			{
				if ((this._KeyMessageChangeDate != value))
				{
					this.OnKeyMessageChangeDateChanging(value);
					this.SendPropertyChanging();
					this._KeyMessageChangeDate = value;
					this.SendPropertyChanged("KeyMessageChangeDate");
					this.OnKeyMessageChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyMessageChangedBy", DbType="Int")]
		public System.Nullable<int> KeyMessageChangedBy
		{
			get
			{
				return this._KeyMessageChangedBy;
			}
			set
			{
				if ((this._KeyMessageChangedBy != value))
				{
					this.OnKeyMessageChangedByChanging(value);
					this.SendPropertyChanging();
					this._KeyMessageChangedBy = value;
					this.SendPropertyChanged("KeyMessageChangedBy");
					this.OnKeyMessageChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Group_t_Operator", Storage="_tLkp_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public tLkp_Group tLkp_Group
		{
			get
			{
				return this._tLkp_Group.Entity;
			}
			set
			{
				tLkp_Group previousValue = this._tLkp_Group.Entity;
				if (((previousValue != value) 
							|| (this._tLkp_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tLkp_Group.Entity = null;
						previousValue.t_Operators.Remove(this);
					}
					this._tLkp_Group.Entity = value;
					if ((value != null))
					{
						value.t_Operators.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("tLkp_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_Country_t_Operator", Storage="_t_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public t_Country t_Country
		{
			get
			{
				return this._t_Country.Entity;
			}
			set
			{
				t_Country previousValue = this._t_Country.Entity;
				if (((previousValue != value) 
							|| (this._t_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._t_Country.Entity = null;
						previousValue.t_Operators.Remove(this);
					}
					this._t_Country.Entity = value;
					if ((value != null))
					{
						value.t_Operators.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("t_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Company_t_Operator", Storage="_tLkp_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public tLkp_Company tLkp_Company
		{
			get
			{
				return this._tLkp_Company.Entity;
			}
			set
			{
				tLkp_Company previousValue = this._tLkp_Company.Entity;
				if (((previousValue != value) 
							|| (this._tLkp_Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tLkp_Company.Entity = null;
						previousValue.t_Operators.Remove(this);
					}
					this._tLkp_Company.Entity = value;
					if ((value != null))
					{
						value.t_Operators.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("tLkp_Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLkp_Group")]
	public partial class tLkp_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private bool _Accurate;
		
		private bool _DemoGroup;
		
		private string _FullGroupName;
		
		private EntitySet<t_Operator> _t_Operators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnAccurateChanging(bool value);
    partial void OnAccurateChanged();
    partial void OnDemoGroupChanging(bool value);
    partial void OnDemoGroupChanged();
    partial void OnFullGroupNameChanging(string value);
    partial void OnFullGroupNameChanged();
    #endregion
		
		public tLkp_Group()
		{
			this._t_Operators = new EntitySet<t_Operator>(new Action<t_Operator>(this.attach_t_Operators), new Action<t_Operator>(this.detach_t_Operators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accurate", DbType="Bit NOT NULL")]
		public bool Accurate
		{
			get
			{
				return this._Accurate;
			}
			set
			{
				if ((this._Accurate != value))
				{
					this.OnAccurateChanging(value);
					this.SendPropertyChanging();
					this._Accurate = value;
					this.SendPropertyChanged("Accurate");
					this.OnAccurateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemoGroup", DbType="Bit NOT NULL")]
		public bool DemoGroup
		{
			get
			{
				return this._DemoGroup;
			}
			set
			{
				if ((this._DemoGroup != value))
				{
					this.OnDemoGroupChanging(value);
					this.SendPropertyChanging();
					this._DemoGroup = value;
					this.SendPropertyChanged("DemoGroup");
					this.OnDemoGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullGroupName", DbType="VarChar(100)")]
		public string FullGroupName
		{
			get
			{
				return this._FullGroupName;
			}
			set
			{
				if ((this._FullGroupName != value))
				{
					this.OnFullGroupNameChanging(value);
					this.SendPropertyChanging();
					this._FullGroupName = value;
					this.SendPropertyChanged("FullGroupName");
					this.OnFullGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Group_t_Operator", Storage="_t_Operators", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<t_Operator> t_Operators
		{
			get
			{
				return this._t_Operators;
			}
			set
			{
				this._t_Operators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Group = this;
		}
		
		private void detach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Country")]
	public partial class t_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Country;
		
		private string _CountryCode;
		
		private System.Nullable<short> _RegionID;
		
		private bool _InUse;
		
		private string _OtherName;
		
		private System.Nullable<bool> _Hide;
		
		private EntitySet<t_Operator> _t_Operators;
		
		private EntityRef<tLkp_Region> _tLkp_Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnRegionIDChanging(System.Nullable<short> value);
    partial void OnRegionIDChanged();
    partial void OnInUseChanging(bool value);
    partial void OnInUseChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnHideChanging(System.Nullable<bool> value);
    partial void OnHideChanged();
    #endregion
		
		public t_Country()
		{
			this._t_Operators = new EntitySet<t_Operator>(new Action<t_Operator>(this.attach_t_Operators), new Action<t_Operator>(this.detach_t_Operators));
			this._tLkp_Region = default(EntityRef<tLkp_Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(3)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="SmallInt")]
		public System.Nullable<short> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._tLkp_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InUse", DbType="Bit NOT NULL")]
		public bool InUse
		{
			get
			{
				return this._InUse;
			}
			set
			{
				if ((this._InUse != value))
				{
					this.OnInUseChanging(value);
					this.SendPropertyChanging();
					this._InUse = value;
					this.SendPropertyChanged("InUse");
					this.OnInUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="VarChar(50)")]
		public string OtherName
		{
			get
			{
				return this._OtherName;
			}
			set
			{
				if ((this._OtherName != value))
				{
					this.OnOtherNameChanging(value);
					this.SendPropertyChanging();
					this._OtherName = value;
					this.SendPropertyChanged("OtherName");
					this.OnOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_Country_t_Operator", Storage="_t_Operators", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<t_Operator> t_Operators
		{
			get
			{
				return this._t_Operators;
			}
			set
			{
				this._t_Operators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Region_t_Country", Storage="_tLkp_Region", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public tLkp_Region tLkp_Region
		{
			get
			{
				return this._tLkp_Region.Entity;
			}
			set
			{
				tLkp_Region previousValue = this._tLkp_Region.Entity;
				if (((previousValue != value) 
							|| (this._tLkp_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tLkp_Region.Entity = null;
						previousValue.t_Countries.Remove(this);
					}
					this._tLkp_Region.Entity = value;
					if ((value != null))
					{
						value.t_Countries.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(Nullable<short>);
					}
					this.SendPropertyChanged("tLkp_Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.t_Country = this;
		}
		
		private void detach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.t_Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLkp_Company")]
	public partial class tLkp_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Company;
		
		private bool _Accurate;
		
		private bool _DemoCompany;
		
		private EntitySet<t_Operator> _t_Operators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAccurateChanging(bool value);
    partial void OnAccurateChanged();
    partial void OnDemoCompanyChanging(bool value);
    partial void OnDemoCompanyChanged();
    #endregion
		
		public tLkp_Company()
		{
			this._t_Operators = new EntitySet<t_Operator>(new Action<t_Operator>(this.attach_t_Operators), new Action<t_Operator>(this.detach_t_Operators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accurate", DbType="Bit NOT NULL")]
		public bool Accurate
		{
			get
			{
				return this._Accurate;
			}
			set
			{
				if ((this._Accurate != value))
				{
					this.OnAccurateChanging(value);
					this.SendPropertyChanging();
					this._Accurate = value;
					this.SendPropertyChanged("Accurate");
					this.OnAccurateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemoCompany", DbType="Bit NOT NULL")]
		public bool DemoCompany
		{
			get
			{
				return this._DemoCompany;
			}
			set
			{
				if ((this._DemoCompany != value))
				{
					this.OnDemoCompanyChanging(value);
					this.SendPropertyChanging();
					this._DemoCompany = value;
					this.SendPropertyChanged("DemoCompany");
					this.OnDemoCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Company_t_Operator", Storage="_t_Operators", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<t_Operator> t_Operators
		{
			get
			{
				return this._t_Operators;
			}
			set
			{
				this._t_Operators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Company = this;
		}
		
		private void detach_t_Operators(t_Operator entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLnk_RigNameType")]
	public partial class tLnk_RigNameType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RigNameTypeID;
		
		private int _RigNameID;
		
		private int _RigTypeID;
		
		private EntityRef<t_RigName> _t_RigName;
		
		private EntityRef<tLkp_RigType> _tLkp_RigType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRigNameTypeIDChanging(int value);
    partial void OnRigNameTypeIDChanged();
    partial void OnRigNameIDChanging(int value);
    partial void OnRigNameIDChanged();
    partial void OnRigTypeIDChanging(int value);
    partial void OnRigTypeIDChanged();
    #endregion
		
		public tLnk_RigNameType()
		{
			this._t_RigName = default(EntityRef<t_RigName>);
			this._tLkp_RigType = default(EntityRef<tLkp_RigType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigNameTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RigNameTypeID
		{
			get
			{
				return this._RigNameTypeID;
			}
			set
			{
				if ((this._RigNameTypeID != value))
				{
					this.OnRigNameTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RigNameTypeID = value;
					this.SendPropertyChanged("RigNameTypeID");
					this.OnRigNameTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigNameID", DbType="Int NOT NULL")]
		public int RigNameID
		{
			get
			{
				return this._RigNameID;
			}
			set
			{
				if ((this._RigNameID != value))
				{
					if (this._t_RigName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRigNameIDChanging(value);
					this.SendPropertyChanging();
					this._RigNameID = value;
					this.SendPropertyChanged("RigNameID");
					this.OnRigNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigTypeID", DbType="Int NOT NULL")]
		public int RigTypeID
		{
			get
			{
				return this._RigTypeID;
			}
			set
			{
				if ((this._RigTypeID != value))
				{
					if (this._tLkp_RigType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRigTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RigTypeID = value;
					this.SendPropertyChanged("RigTypeID");
					this.OnRigTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_RigName_tLnk_RigNameType", Storage="_t_RigName", ThisKey="RigNameID", OtherKey="RigNameID", IsForeignKey=true)]
		public t_RigName t_RigName
		{
			get
			{
				return this._t_RigName.Entity;
			}
			set
			{
				t_RigName previousValue = this._t_RigName.Entity;
				if (((previousValue != value) 
							|| (this._t_RigName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._t_RigName.Entity = null;
						previousValue.tLnk_RigNameTypes.Remove(this);
					}
					this._t_RigName.Entity = value;
					if ((value != null))
					{
						value.tLnk_RigNameTypes.Add(this);
						this._RigNameID = value.RigNameID;
					}
					else
					{
						this._RigNameID = default(int);
					}
					this.SendPropertyChanged("t_RigName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_RigType1_tLnk_RigNameType", Storage="_tLkp_RigType", ThisKey="RigTypeID", OtherKey="RigTypeID", IsForeignKey=true)]
		public tLkp_RigType tLkp_RigType
		{
			get
			{
				return this._tLkp_RigType.Entity;
			}
			set
			{
				tLkp_RigType previousValue = this._tLkp_RigType.Entity;
				if (((previousValue != value) 
							|| (this._tLkp_RigType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tLkp_RigType.Entity = null;
						previousValue.tLnk_RigNameTypes.Remove(this);
					}
					this._tLkp_RigType.Entity = value;
					if ((value != null))
					{
						value.tLnk_RigNameTypes.Add(this);
						this._RigTypeID = value.RigTypeID;
					}
					else
					{
						this._RigTypeID = default(int);
					}
					this.SendPropertyChanged("tLkp_RigType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_RigName")]
	public partial class t_RigName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RigNameID;
		
		private string _RigName;
		
		private double _max_water_depth_m;
		
		private double _max_mtd_m;
		
		private EntitySet<tLnk_RigNameType> _tLnk_RigNameTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRigNameIDChanging(int value);
    partial void OnRigNameIDChanged();
    partial void OnRigNameChanging(string value);
    partial void OnRigNameChanged();
    partial void Onmax_water_depth_mChanging(double value);
    partial void Onmax_water_depth_mChanged();
    partial void Onmax_mtd_mChanging(double value);
    partial void Onmax_mtd_mChanged();
    #endregion
		
		public t_RigName()
		{
			this._tLnk_RigNameTypes = new EntitySet<tLnk_RigNameType>(new Action<tLnk_RigNameType>(this.attach_tLnk_RigNameTypes), new Action<tLnk_RigNameType>(this.detach_tLnk_RigNameTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigNameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RigNameID
		{
			get
			{
				return this._RigNameID;
			}
			set
			{
				if ((this._RigNameID != value))
				{
					this.OnRigNameIDChanging(value);
					this.SendPropertyChanging();
					this._RigNameID = value;
					this.SendPropertyChanged("RigNameID");
					this.OnRigNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RigName
		{
			get
			{
				return this._RigName;
			}
			set
			{
				if ((this._RigName != value))
				{
					this.OnRigNameChanging(value);
					this.SendPropertyChanging();
					this._RigName = value;
					this.SendPropertyChanged("RigName");
					this.OnRigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_water_depth_m", DbType="Float NOT NULL")]
		public double max_water_depth_m
		{
			get
			{
				return this._max_water_depth_m;
			}
			set
			{
				if ((this._max_water_depth_m != value))
				{
					this.Onmax_water_depth_mChanging(value);
					this.SendPropertyChanging();
					this._max_water_depth_m = value;
					this.SendPropertyChanged("max_water_depth_m");
					this.Onmax_water_depth_mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_mtd_m", DbType="Float NOT NULL")]
		public double max_mtd_m
		{
			get
			{
				return this._max_mtd_m;
			}
			set
			{
				if ((this._max_mtd_m != value))
				{
					this.Onmax_mtd_mChanging(value);
					this.SendPropertyChanging();
					this._max_mtd_m = value;
					this.SendPropertyChanged("max_mtd_m");
					this.Onmax_mtd_mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="t_RigName_tLnk_RigNameType", Storage="_tLnk_RigNameTypes", ThisKey="RigNameID", OtherKey="RigNameID")]
		public EntitySet<tLnk_RigNameType> tLnk_RigNameTypes
		{
			get
			{
				return this._tLnk_RigNameTypes;
			}
			set
			{
				this._tLnk_RigNameTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tLnk_RigNameTypes(tLnk_RigNameType entity)
		{
			this.SendPropertyChanging();
			entity.t_RigName = this;
		}
		
		private void detach_tLnk_RigNameTypes(tLnk_RigNameType entity)
		{
			this.SendPropertyChanging();
			entity.t_RigName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLkp_ExchangeRate")]
	public partial class tLkp_ExchangeRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExRateID;
		
		private string _CurrencyCode;
		
		private string _Date;
		
		private System.Nullable<double> _ExRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExRateIDChanging(int value);
    partial void OnExRateIDChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnExRateChanging(System.Nullable<double> value);
    partial void OnExRateChanged();
    #endregion
		
		public tLkp_ExchangeRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExRateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExRateID
		{
			get
			{
				return this._ExRateID;
			}
			set
			{
				if ((this._ExRateID != value))
				{
					this.OnExRateIDChanging(value);
					this.SendPropertyChanging();
					this._ExRateID = value;
					this.SendPropertyChanged("ExRateID");
					this.OnExRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExRate", DbType="Float")]
		public System.Nullable<double> ExRate
		{
			get
			{
				return this._ExRate;
			}
			set
			{
				if ((this._ExRate != value))
				{
					this.OnExRateChanging(value);
					this.SendPropertyChanging();
					this._ExRate = value;
					this.SendPropertyChanged("ExRate");
					this.OnExRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLkp_Region")]
	public partial class tLkp_Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Region;
		
		private string _LongName;
		
		private string _FullRegionName;
		
		private EntitySet<t_Country> _t_Countries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnFullRegionNameChanging(string value);
    partial void OnFullRegionNameChanged();
    #endregion
		
		public tLkp_Region()
		{
			this._t_Countries = new EntitySet<t_Country>(new Action<t_Country>(this.attach_t_Countries), new Action<t_Country>(this.detach_t_Countries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(50)")]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullRegionName", DbType="VarChar(50)")]
		public string FullRegionName
		{
			get
			{
				return this._FullRegionName;
			}
			set
			{
				if ((this._FullRegionName != value))
				{
					this.OnFullRegionNameChanging(value);
					this.SendPropertyChanging();
					this._FullRegionName = value;
					this.SendPropertyChanged("FullRegionName");
					this.OnFullRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_Region_t_Country", Storage="_t_Countries", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<t_Country> t_Countries
		{
			get
			{
				return this._t_Countries;
			}
			set
			{
				this._t_Countries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_t_Countries(t_Country entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Region = this;
		}
		
		private void detach_t_Countries(t_Country entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_ParticipatingOperators")]
	public partial class v_ParticipatingOperator
	{
		
		private int _OperatorID;
		
		private int _OperatorStatusID;
		
		private string _GroupName;
		
		private string _Company;
		
		private string _Country;
		
		private string _Region;
		
		private string _BusinessUnitRevYr;
		
		private string _ParticipationStatus;
		
		private string _ActivityStatus;
		
		private bool _Sleeping;
		
		private bool _CostDataSubmission;
		
		private bool _AccessRestrictionOverride;
		
		private string _PlaceHolderJF;
		
		private string _JoinFormStatus;
		
		private System.Nullable<byte> _AccessRestriction;
		
		private int _Q1;
		
		private string _Q1Placeholder;
		
		private System.Nullable<byte> _Q1WellDeclarationStatus;
		
		private bool _Q1SubmissionComplete;
		
		private System.Nullable<int> _Q1WellsRcd;
		
		private bool _Q1DataQueries;
		
		private bool _Q1TDChartsQueries;
		
		private int _Q2;
		
		private string _Q2Placeholder;
		
		private System.Nullable<byte> _Q2WellDeclarationStatus;
		
		private bool _Q2SubmissionComplete;
		
		private System.Nullable<int> _Q2WellsRcd;
		
		private bool _Q2DataQueries;
		
		private bool _Q2TDChartsQueries;
		
		private int _Q3;
		
		private string _Q3Placeholder;
		
		private System.Nullable<byte> _Q3WellDeclarationStatus;
		
		private bool _Q3SubmissionComplete;
		
		private System.Nullable<int> _Q3WellsRcd;
		
		private bool _Q3DataQueries;
		
		private bool _Q3TDChartsQueries;
		
		private int _Q4;
		
		private string _Q4Placeholder;
		
		private System.Nullable<byte> _Q4WellDeclarationStatus;
		
		private bool _Q4SubmissionComplete;
		
		private System.Nullable<int> _Q4WellsRcd;
		
		private bool _Q4DataQueries;
		
		private bool _Q4TDChartsQueries;
		
		private string _Review;
		
		private short _Year;
		
		public v_ParticipatingOperator()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorID", DbType="Int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._OperatorID;
			}
			set
			{
				if ((this._OperatorID != value))
				{
					this._OperatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorStatusID", DbType="Int NOT NULL")]
		public int OperatorStatusID
		{
			get
			{
				return this._OperatorStatusID;
			}
			set
			{
				if ((this._OperatorStatusID != value))
				{
					this._OperatorStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnitRevYr", DbType="VarChar(50)")]
		public string BusinessUnitRevYr
		{
			get
			{
				return this._BusinessUnitRevYr;
			}
			set
			{
				if ((this._BusinessUnitRevYr != value))
				{
					this._BusinessUnitRevYr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipationStatus", DbType="VarChar(20)")]
		public string ParticipationStatus
		{
			get
			{
				return this._ParticipationStatus;
			}
			set
			{
				if ((this._ParticipationStatus != value))
				{
					this._ParticipationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityStatus", DbType="VarChar(20)")]
		public string ActivityStatus
		{
			get
			{
				return this._ActivityStatus;
			}
			set
			{
				if ((this._ActivityStatus != value))
				{
					this._ActivityStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sleeping", DbType="Bit NOT NULL")]
		public bool Sleeping
		{
			get
			{
				return this._Sleeping;
			}
			set
			{
				if ((this._Sleeping != value))
				{
					this._Sleeping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostDataSubmission", DbType="Bit NOT NULL")]
		public bool CostDataSubmission
		{
			get
			{
				return this._CostDataSubmission;
			}
			set
			{
				if ((this._CostDataSubmission != value))
				{
					this._CostDataSubmission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRestrictionOverride", DbType="Bit NOT NULL")]
		public bool AccessRestrictionOverride
		{
			get
			{
				return this._AccessRestrictionOverride;
			}
			set
			{
				if ((this._AccessRestrictionOverride != value))
				{
					this._AccessRestrictionOverride = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceHolderJF", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string PlaceHolderJF
		{
			get
			{
				return this._PlaceHolderJF;
			}
			set
			{
				if ((this._PlaceHolderJF != value))
				{
					this._PlaceHolderJF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinFormStatus", DbType="VarChar(20)")]
		public string JoinFormStatus
		{
			get
			{
				return this._JoinFormStatus;
			}
			set
			{
				if ((this._JoinFormStatus != value))
				{
					this._JoinFormStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRestriction", DbType="TinyInt")]
		public System.Nullable<byte> AccessRestriction
		{
			get
			{
				return this._AccessRestriction;
			}
			set
			{
				if ((this._AccessRestriction != value))
				{
					this._AccessRestriction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1", DbType="Int NOT NULL")]
		public int Q1
		{
			get
			{
				return this._Q1;
			}
			set
			{
				if ((this._Q1 != value))
				{
					this._Q1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1Placeholder", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Q1Placeholder
		{
			get
			{
				return this._Q1Placeholder;
			}
			set
			{
				if ((this._Q1Placeholder != value))
				{
					this._Q1Placeholder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1WellDeclarationStatus", DbType="TinyInt")]
		public System.Nullable<byte> Q1WellDeclarationStatus
		{
			get
			{
				return this._Q1WellDeclarationStatus;
			}
			set
			{
				if ((this._Q1WellDeclarationStatus != value))
				{
					this._Q1WellDeclarationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1SubmissionComplete", DbType="Bit NOT NULL")]
		public bool Q1SubmissionComplete
		{
			get
			{
				return this._Q1SubmissionComplete;
			}
			set
			{
				if ((this._Q1SubmissionComplete != value))
				{
					this._Q1SubmissionComplete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1WellsRcd", DbType="Int")]
		public System.Nullable<int> Q1WellsRcd
		{
			get
			{
				return this._Q1WellsRcd;
			}
			set
			{
				if ((this._Q1WellsRcd != value))
				{
					this._Q1WellsRcd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1DataQueries", DbType="Bit NOT NULL")]
		public bool Q1DataQueries
		{
			get
			{
				return this._Q1DataQueries;
			}
			set
			{
				if ((this._Q1DataQueries != value))
				{
					this._Q1DataQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1TDChartsQueries", DbType="Bit NOT NULL")]
		public bool Q1TDChartsQueries
		{
			get
			{
				return this._Q1TDChartsQueries;
			}
			set
			{
				if ((this._Q1TDChartsQueries != value))
				{
					this._Q1TDChartsQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2", DbType="Int NOT NULL")]
		public int Q2
		{
			get
			{
				return this._Q2;
			}
			set
			{
				if ((this._Q2 != value))
				{
					this._Q2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2Placeholder", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Q2Placeholder
		{
			get
			{
				return this._Q2Placeholder;
			}
			set
			{
				if ((this._Q2Placeholder != value))
				{
					this._Q2Placeholder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2WellDeclarationStatus", DbType="TinyInt")]
		public System.Nullable<byte> Q2WellDeclarationStatus
		{
			get
			{
				return this._Q2WellDeclarationStatus;
			}
			set
			{
				if ((this._Q2WellDeclarationStatus != value))
				{
					this._Q2WellDeclarationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2SubmissionComplete", DbType="Bit NOT NULL")]
		public bool Q2SubmissionComplete
		{
			get
			{
				return this._Q2SubmissionComplete;
			}
			set
			{
				if ((this._Q2SubmissionComplete != value))
				{
					this._Q2SubmissionComplete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2WellsRcd", DbType="Int")]
		public System.Nullable<int> Q2WellsRcd
		{
			get
			{
				return this._Q2WellsRcd;
			}
			set
			{
				if ((this._Q2WellsRcd != value))
				{
					this._Q2WellsRcd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2DataQueries", DbType="Bit NOT NULL")]
		public bool Q2DataQueries
		{
			get
			{
				return this._Q2DataQueries;
			}
			set
			{
				if ((this._Q2DataQueries != value))
				{
					this._Q2DataQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2TDChartsQueries", DbType="Bit NOT NULL")]
		public bool Q2TDChartsQueries
		{
			get
			{
				return this._Q2TDChartsQueries;
			}
			set
			{
				if ((this._Q2TDChartsQueries != value))
				{
					this._Q2TDChartsQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3", DbType="Int NOT NULL")]
		public int Q3
		{
			get
			{
				return this._Q3;
			}
			set
			{
				if ((this._Q3 != value))
				{
					this._Q3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3Placeholder", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Q3Placeholder
		{
			get
			{
				return this._Q3Placeholder;
			}
			set
			{
				if ((this._Q3Placeholder != value))
				{
					this._Q3Placeholder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3WellDeclarationStatus", DbType="TinyInt")]
		public System.Nullable<byte> Q3WellDeclarationStatus
		{
			get
			{
				return this._Q3WellDeclarationStatus;
			}
			set
			{
				if ((this._Q3WellDeclarationStatus != value))
				{
					this._Q3WellDeclarationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3SubmissionComplete", DbType="Bit NOT NULL")]
		public bool Q3SubmissionComplete
		{
			get
			{
				return this._Q3SubmissionComplete;
			}
			set
			{
				if ((this._Q3SubmissionComplete != value))
				{
					this._Q3SubmissionComplete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3WellsRcd", DbType="Int")]
		public System.Nullable<int> Q3WellsRcd
		{
			get
			{
				return this._Q3WellsRcd;
			}
			set
			{
				if ((this._Q3WellsRcd != value))
				{
					this._Q3WellsRcd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3DataQueries", DbType="Bit NOT NULL")]
		public bool Q3DataQueries
		{
			get
			{
				return this._Q3DataQueries;
			}
			set
			{
				if ((this._Q3DataQueries != value))
				{
					this._Q3DataQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q3TDChartsQueries", DbType="Bit NOT NULL")]
		public bool Q3TDChartsQueries
		{
			get
			{
				return this._Q3TDChartsQueries;
			}
			set
			{
				if ((this._Q3TDChartsQueries != value))
				{
					this._Q3TDChartsQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4", DbType="Int NOT NULL")]
		public int Q4
		{
			get
			{
				return this._Q4;
			}
			set
			{
				if ((this._Q4 != value))
				{
					this._Q4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4Placeholder", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Q4Placeholder
		{
			get
			{
				return this._Q4Placeholder;
			}
			set
			{
				if ((this._Q4Placeholder != value))
				{
					this._Q4Placeholder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4WellDeclarationStatus", DbType="TinyInt")]
		public System.Nullable<byte> Q4WellDeclarationStatus
		{
			get
			{
				return this._Q4WellDeclarationStatus;
			}
			set
			{
				if ((this._Q4WellDeclarationStatus != value))
				{
					this._Q4WellDeclarationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4SubmissionComplete", DbType="Bit NOT NULL")]
		public bool Q4SubmissionComplete
		{
			get
			{
				return this._Q4SubmissionComplete;
			}
			set
			{
				if ((this._Q4SubmissionComplete != value))
				{
					this._Q4SubmissionComplete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4WellsRcd", DbType="Int")]
		public System.Nullable<int> Q4WellsRcd
		{
			get
			{
				return this._Q4WellsRcd;
			}
			set
			{
				if ((this._Q4WellsRcd != value))
				{
					this._Q4WellsRcd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4DataQueries", DbType="Bit NOT NULL")]
		public bool Q4DataQueries
		{
			get
			{
				return this._Q4DataQueries;
			}
			set
			{
				if ((this._Q4DataQueries != value))
				{
					this._Q4DataQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q4TDChartsQueries", DbType="Bit NOT NULL")]
		public bool Q4TDChartsQueries
		{
			get
			{
				return this._Q4TDChartsQueries;
			}
			set
			{
				if ((this._Q4TDChartsQueries != value))
				{
					this._Q4TDChartsQueries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Review
		{
			get
			{
				return this._Review;
			}
			set
			{
				if ((this._Review != value))
				{
					this._Review = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_ListCountriesInUse")]
	public partial class v_ListCountriesInUse
	{
		
		private int _ID;
		
		private string _Region;
		
		private string _Country;
		
		private string _CountryCode;
		
		public v_ListCountriesInUse()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(3)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this._CountryCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_StagingWells")]
	public partial class t_StagingWell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OperatorStatusRevYrID;
		
		private short _DataTypeID;
		
		private char _ValidationStatus;
		
		private string _WellName;
		
		private string _SpecimenWellName;
		
		private string _InHouseName;
		
		private string _Field;
		
		private string _BlockNumber;
		
		private string _Platform;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _SubRegion;
		
		private byte _DHoleEndQtr;
		
		private string _OwnDrill;
		
		private System.Nullable<System.DateTime> _DBUpdateDate;
		
		private System.Nullable<System.DateTime> _WebUpdateDate;
		
		private System.Nullable<System.DateTime> _BecameValidDate;
		
		private System.Nullable<System.DateTime> _WellCreatedDate;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private string _TDDataHelp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOperatorStatusRevYrIDChanging(int value);
    partial void OnOperatorStatusRevYrIDChanged();
    partial void OnDataTypeIDChanging(short value);
    partial void OnDataTypeIDChanged();
    partial void OnValidationStatusChanging(char value);
    partial void OnValidationStatusChanged();
    partial void OnWellNameChanging(string value);
    partial void OnWellNameChanged();
    partial void OnSpecimenWellNameChanging(string value);
    partial void OnSpecimenWellNameChanged();
    partial void OnInHouseNameChanging(string value);
    partial void OnInHouseNameChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnBlockNumberChanging(string value);
    partial void OnBlockNumberChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnSubRegionChanging(string value);
    partial void OnSubRegionChanged();
    partial void OnDHoleEndQtrChanging(byte value);
    partial void OnDHoleEndQtrChanged();
    partial void OnOwnDrillChanging(string value);
    partial void OnOwnDrillChanged();
    partial void OnDBUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDBUpdateDateChanged();
    partial void OnWebUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWebUpdateDateChanged();
    partial void OnBecameValidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBecameValidDateChanged();
    partial void OnWellCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWellCreatedDateChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnTDDataHelpChanging(string value);
    partial void OnTDDataHelpChanged();
    #endregion
		
		public t_StagingWell()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorStatusRevYrID", DbType="Int NOT NULL")]
		public int OperatorStatusRevYrID
		{
			get
			{
				return this._OperatorStatusRevYrID;
			}
			set
			{
				if ((this._OperatorStatusRevYrID != value))
				{
					this.OnOperatorStatusRevYrIDChanging(value);
					this.SendPropertyChanging();
					this._OperatorStatusRevYrID = value;
					this.SendPropertyChanged("OperatorStatusRevYrID");
					this.OnOperatorStatusRevYrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeID", DbType="SmallInt NOT NULL")]
		public short DataTypeID
		{
			get
			{
				return this._DataTypeID;
			}
			set
			{
				if ((this._DataTypeID != value))
				{
					this.OnDataTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DataTypeID = value;
					this.SendPropertyChanged("DataTypeID");
					this.OnDataTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationStatus", DbType="Char(1) NOT NULL")]
		public char ValidationStatus
		{
			get
			{
				return this._ValidationStatus;
			}
			set
			{
				if ((this._ValidationStatus != value))
				{
					this.OnValidationStatusChanging(value);
					this.SendPropertyChanging();
					this._ValidationStatus = value;
					this.SendPropertyChanged("ValidationStatus");
					this.OnValidationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WellName
		{
			get
			{
				return this._WellName;
			}
			set
			{
				if ((this._WellName != value))
				{
					this.OnWellNameChanging(value);
					this.SendPropertyChanging();
					this._WellName = value;
					this.SendPropertyChanged("WellName");
					this.OnWellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenWellName", DbType="NVarChar(50)")]
		public string SpecimenWellName
		{
			get
			{
				return this._SpecimenWellName;
			}
			set
			{
				if ((this._SpecimenWellName != value))
				{
					this.OnSpecimenWellNameChanging(value);
					this.SendPropertyChanging();
					this._SpecimenWellName = value;
					this.SendPropertyChanged("SpecimenWellName");
					this.OnSpecimenWellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InHouseName", DbType="NVarChar(50)")]
		public string InHouseName
		{
			get
			{
				return this._InHouseName;
			}
			set
			{
				if ((this._InHouseName != value))
				{
					this.OnInHouseNameChanging(value);
					this.SendPropertyChanging();
					this._InHouseName = value;
					this.SendPropertyChanged("InHouseName");
					this.OnInHouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="NVarChar(50)")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockNumber", DbType="NVarChar(50)")]
		public string BlockNumber
		{
			get
			{
				return this._BlockNumber;
			}
			set
			{
				if ((this._BlockNumber != value))
				{
					this.OnBlockNumberChanging(value);
					this.SendPropertyChanging();
					this._BlockNumber = value;
					this.SendPropertyChanged("BlockNumber");
					this.OnBlockNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="NVarChar(40)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(20)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(20)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubRegion", DbType="VarChar(50)")]
		public string SubRegion
		{
			get
			{
				return this._SubRegion;
			}
			set
			{
				if ((this._SubRegion != value))
				{
					this.OnSubRegionChanging(value);
					this.SendPropertyChanging();
					this._SubRegion = value;
					this.SendPropertyChanged("SubRegion");
					this.OnSubRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleEndQtr", DbType="TinyInt NOT NULL")]
		public byte DHoleEndQtr
		{
			get
			{
				return this._DHoleEndQtr;
			}
			set
			{
				if ((this._DHoleEndQtr != value))
				{
					this.OnDHoleEndQtrChanging(value);
					this.SendPropertyChanging();
					this._DHoleEndQtr = value;
					this.SendPropertyChanged("DHoleEndQtr");
					this.OnDHoleEndQtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnDrill", DbType="VarChar(3)")]
		public string OwnDrill
		{
			get
			{
				return this._OwnDrill;
			}
			set
			{
				if ((this._OwnDrill != value))
				{
					this.OnOwnDrillChanging(value);
					this.SendPropertyChanging();
					this._OwnDrill = value;
					this.SendPropertyChanged("OwnDrill");
					this.OnOwnDrillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DBUpdateDate
		{
			get
			{
				return this._DBUpdateDate;
			}
			set
			{
				if ((this._DBUpdateDate != value))
				{
					this.OnDBUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._DBUpdateDate = value;
					this.SendPropertyChanged("DBUpdateDate");
					this.OnDBUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WebUpdateDate
		{
			get
			{
				return this._WebUpdateDate;
			}
			set
			{
				if ((this._WebUpdateDate != value))
				{
					this.OnWebUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._WebUpdateDate = value;
					this.SendPropertyChanged("WebUpdateDate");
					this.OnWebUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BecameValidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BecameValidDate
		{
			get
			{
				return this._BecameValidDate;
			}
			set
			{
				if ((this._BecameValidDate != value))
				{
					this.OnBecameValidDateChanging(value);
					this.SendPropertyChanging();
					this._BecameValidDate = value;
					this.SendPropertyChanged("BecameValidDate");
					this.OnBecameValidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WellCreatedDate
		{
			get
			{
				return this._WellCreatedDate;
			}
			set
			{
				if ((this._WellCreatedDate != value))
				{
					this.OnWellCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._WellCreatedDate = value;
					this.SendPropertyChanged("WellCreatedDate");
					this.OnWellCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDDataHelp", DbType="VarChar(1)")]
		public string TDDataHelp
		{
			get
			{
				return this._TDDataHelp;
			}
			set
			{
				if ((this._TDDataHelp != value))
				{
					this.OnTDDataHelpChanging(value);
					this.SendPropertyChanging();
					this._TDDataHelp = value;
					this.SendPropertyChanged("TDDataHelp");
					this.OnTDDataHelpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDPR_StagingWellData")]
	public partial class tDPR_StagingWellData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WellID;
		
		private System.Nullable<char> _HoleType;
		
		private System.Nullable<System.DateTime> _SpudDate;
		
		private System.Nullable<System.DateTime> _DHoleEndDate;
		
		private System.Nullable<byte> _LocatorWell;
		
		private System.Nullable<byte> _Multilateral;
		
		private string _JunctionType;
		
		private System.Nullable<byte> _NumLaterals;
		
		private System.Nullable<byte> _NumMechanicalSTracks;
		
		private System.Nullable<byte> _ReSpud;
		
		private string _OriginalName;
		
		private string _WellType;
		
		private string _PlayType;
		
		private System.Nullable<byte> _HP;
		
		private System.Nullable<byte> _HT;
		
		private string _RigType;
		
		private string _RigName;
		
		private System.Nullable<byte> _DualActivityRig;
		
		private string _DrillMethod;
		
		private System.Nullable<byte> _Exceptional;
		
		private System.Nullable<byte> _Complex;
		
		private System.Nullable<decimal> _WaterDepth;
		
		private System.Nullable<decimal> _SpudDepth;
		
		private System.Nullable<decimal> _MTD;
		
		private System.Nullable<decimal> _TVD;
		
		private System.Nullable<decimal> _DrillInterval;
		
		private System.Nullable<decimal> _HorizDisplacement;
		
		private System.Nullable<decimal> _AspectRatio;
		
		private System.Nullable<decimal> _ComplexRatio;
		
		private System.Nullable<decimal> _TotalSectionLength;
		
		private System.Nullable<short> _MaxAngle;
		
		private string _ExtendedReach;
		
		private System.Nullable<decimal> _FinalBitSize;
		
		private string _PreCasings;
		
		private string _NewCasings;
		
		private string _UnderBalance;
		
		private string _FluidType;
		
		private System.Nullable<decimal> _TDMudWt;
		
		private System.Nullable<decimal> _MaxMudWt;
		
		private string _CuttingDisposal;
		
		private System.Nullable<decimal> _CoringDays;
		
		private System.Nullable<decimal> _CoringInterval;
		
		private System.Nullable<decimal> _UReamInterval;
		
		private System.Nullable<decimal> _LogDaysNotTD;
		
		private System.Nullable<decimal> _LogDaysTD;
		
		private System.Nullable<decimal> _LogDaysTotal;
		
		private System.Nullable<decimal> _UReamDays;
		
		private System.Nullable<byte> _FEWD;
		
		private string _ReservoirFormation;
		
		private string _NewTechniques;
		
		private System.Nullable<decimal> _SlotRecovEnhDays;
		
		private System.Nullable<byte> _OffSlotRecoveryOp;
		
		private string _BatchSet;
		
		private System.Nullable<decimal> _DHoleDays;
		
		private System.Nullable<decimal> _DHoleDaysExUReam;
		
		private System.Nullable<short> _NoOfSuspends;
		
		private System.Nullable<decimal> _SuspendReEnterDays;
		
		private System.Nullable<decimal> _TotalWellSiteDays;
		
		private System.Nullable<decimal> _SpudTDDaysExCorLogUReam;
		
		private string _WellStatus;
		
		private System.Nullable<decimal> _PAOrSUDays;
		
		private System.Nullable<decimal> _MetresPerDayOld;
		
		private System.Nullable<decimal> _MetresPerDay;
		
		private System.Nullable<decimal> _MetresPerDayExCorLogUReam;
		
		private System.Nullable<decimal> _DHoleDays1000mOld;
		
		private System.Nullable<decimal> _DHoleDays1000m;
		
		private System.Nullable<decimal> _WOWCoringDays;
		
		private System.Nullable<decimal> _WOWLogDays;
		
		private System.Nullable<decimal> _WOWOtherDays;
		
		private System.Nullable<decimal> _ITCoringDays;
		
		private System.Nullable<decimal> _ITLogDays;
		
		private System.Nullable<decimal> _ITOtherDays;
		
		private System.Nullable<decimal> _WOWTotalDHoleDays;
		
		private System.Nullable<decimal> _ITTotalDHoleDays;
		
		private System.Nullable<decimal> _RigEqFailDays;
		
		private System.Nullable<decimal> _ServEqFailDays;
		
		private System.Nullable<decimal> _PlatformDays;
		
		private System.Nullable<decimal> _OpProblemDays;
		
		private System.Nullable<decimal> _ForceMajeureDays;
		
		private string _MajorITEvents;
		
		private string _FurtherDetails;
		
		private string _Comments;
		
		private string _TDChartFilename;
		
		private System.Nullable<decimal> _CalcTotalWow;
		
		private System.Nullable<decimal> _CalcTotalIT;
		
		private System.Nullable<decimal> _CalcWowPercent;
		
		private System.Nullable<decimal> _CalcITPercent;
		
		private System.Nullable<byte> _NumContingencyGeolST;
		
		private System.Nullable<short> _UnusedLenContingencyGS;
		
		private System.Nullable<short> _UnusedLenLocatorWell;
		
		private System.Nullable<decimal> _GeolSTWhipstockDays;
		
		private System.Nullable<bool> _HasTDRecords;
		
		private string _ExtendedReachPre05;
		
		private System.Nullable<short> _NewCasingCount;
		
		private System.Nullable<short> _AllCasingCount;
		
		private System.Nullable<decimal> _DrillFloorElevation;
		
		private System.Nullable<byte> _ConductorInstalledByDrillingRig;
		
		private System.Nullable<decimal> _OperatorProblemsIT;
		
		private System.Nullable<decimal> _DownholeProblemsIT;
		
		private System.Nullable<int> _RDI;
		
		private System.Nullable<short> _oldRDI;
		
		private System.Nullable<decimal> _TotalDaysToEndOfDHPeriod;
		
		private System.Nullable<decimal> _PASUCompletionDays;
		
		private System.Nullable<decimal> _CompletionDays;
		
		private System.Nullable<decimal> _RigContractorIT;
		
		private System.Nullable<decimal> _ServiceCompanyIT;
		
		private System.Nullable<decimal> _ExternalProblemsIT;
		
		private string _DrillingContractor;
		
		private string _MudWeightUnits;
		
		private System.Nullable<decimal> _RigMoveDays;
		
		private System.Nullable<bool> _RigMoveInField;
		
		private System.Nullable<decimal> _OtherOpsDays;
		
		private string _PreExisitingCasing1;
		
		private string _PreExisitingCasing2;
		
		private string _PreExisitingCasing3;
		
		private string _PreExisitingCasing4;
		
		private string _PreExisitingCasing5;
		
		private string _PreExisitingCasing6;
		
		private string _PreExisitingCasing7;
		
		private string _PreExisitingCasing8;
		
		private string _PreExisitingCasing9;
		
		private string _PreExisitingCasing10;
		
		private string _PreExistingCasing11;
		
		private string _ConductorCasing;
		
		private System.Nullable<byte> _SplitConductor;
		
		private System.Nullable<byte> _ExpandableCasingCount;
		
		private string _NewCasing1;
		
		private string _NewCasing2;
		
		private string _NewCasing3;
		
		private string _NewCasing4;
		
		private string _NewCasing5;
		
		private string _NewCasing6;
		
		private string _NewCasing7;
		
		private string _NewCasing8;
		
		private string _NewCasing9;
		
		private string _NewCasing10;
		
		private string _CasingDrilled;
		
		private System.Nullable<decimal> _DHDaysExCorLogUReam1000m;
		
		private string _RigMoorSystem;
		
		private System.Nullable<decimal> _MoorDays;
		
		private System.Nullable<decimal> _DeMoorDays;
		
		private System.Nullable<decimal> _WOWMoorDays;
		
		private System.Nullable<decimal> _WOWDeMoorDays;
		
		private System.Nullable<System.DateTime> _EndOfWellOpsDate;
		
		private System.Nullable<decimal> _WOWBeforeDeMoorDays;
		
		private string _APINumber;
		
		private System.Nullable<byte> _Subsalt;
		
		private System.Nullable<decimal> _TVDSaltStart;
		
		private System.Nullable<decimal> _TVDSaltEnd;
		
		private System.Nullable<decimal> _DHDaysExCorLog1000m;
		
		private System.Nullable<decimal> _DHDaysExCorLog;
		
		private System.Nullable<decimal> _MetresPerDayExCorLog;
		
		private System.Nullable<decimal> _NPT1000m;
		
		private System.Nullable<decimal> _WOW1000m;
		
		private System.Nullable<decimal> _ProductiveDays1000m;
		
		private System.Nullable<decimal> _CalcProductiveDays;
		
		private string _GeothermalType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWellIDChanging(int value);
    partial void OnWellIDChanged();
    partial void OnHoleTypeChanging(System.Nullable<char> value);
    partial void OnHoleTypeChanged();
    partial void OnSpudDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSpudDateChanged();
    partial void OnDHoleEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDHoleEndDateChanged();
    partial void OnLocatorWellChanging(System.Nullable<byte> value);
    partial void OnLocatorWellChanged();
    partial void OnMultilateralChanging(System.Nullable<byte> value);
    partial void OnMultilateralChanged();
    partial void OnJunctionTypeChanging(string value);
    partial void OnJunctionTypeChanged();
    partial void OnNumLateralsChanging(System.Nullable<byte> value);
    partial void OnNumLateralsChanged();
    partial void OnNumMechanicalSTracksChanging(System.Nullable<byte> value);
    partial void OnNumMechanicalSTracksChanged();
    partial void OnReSpudChanging(System.Nullable<byte> value);
    partial void OnReSpudChanged();
    partial void OnOriginalNameChanging(string value);
    partial void OnOriginalNameChanged();
    partial void OnWellTypeChanging(string value);
    partial void OnWellTypeChanged();
    partial void OnPlayTypeChanging(string value);
    partial void OnPlayTypeChanged();
    partial void OnHPChanging(System.Nullable<byte> value);
    partial void OnHPChanged();
    partial void OnHTChanging(System.Nullable<byte> value);
    partial void OnHTChanged();
    partial void OnRigTypeChanging(string value);
    partial void OnRigTypeChanged();
    partial void OnRigNameChanging(string value);
    partial void OnRigNameChanged();
    partial void OnDualActivityRigChanging(System.Nullable<byte> value);
    partial void OnDualActivityRigChanged();
    partial void OnDrillMethodChanging(string value);
    partial void OnDrillMethodChanged();
    partial void OnExceptionalChanging(System.Nullable<byte> value);
    partial void OnExceptionalChanged();
    partial void OnComplexChanging(System.Nullable<byte> value);
    partial void OnComplexChanged();
    partial void OnWaterDepthChanging(System.Nullable<decimal> value);
    partial void OnWaterDepthChanged();
    partial void OnSpudDepthChanging(System.Nullable<decimal> value);
    partial void OnSpudDepthChanged();
    partial void OnMTDChanging(System.Nullable<decimal> value);
    partial void OnMTDChanged();
    partial void OnTVDChanging(System.Nullable<decimal> value);
    partial void OnTVDChanged();
    partial void OnDrillIntervalChanging(System.Nullable<decimal> value);
    partial void OnDrillIntervalChanged();
    partial void OnHorizDisplacementChanging(System.Nullable<decimal> value);
    partial void OnHorizDisplacementChanged();
    partial void OnAspectRatioChanging(System.Nullable<decimal> value);
    partial void OnAspectRatioChanged();
    partial void OnComplexRatioChanging(System.Nullable<decimal> value);
    partial void OnComplexRatioChanged();
    partial void OnTotalSectionLengthChanging(System.Nullable<decimal> value);
    partial void OnTotalSectionLengthChanged();
    partial void OnMaxAngleChanging(System.Nullable<short> value);
    partial void OnMaxAngleChanged();
    partial void OnExtendedReachChanging(string value);
    partial void OnExtendedReachChanged();
    partial void OnFinalBitSizeChanging(System.Nullable<decimal> value);
    partial void OnFinalBitSizeChanged();
    partial void OnPreCasingsChanging(string value);
    partial void OnPreCasingsChanged();
    partial void OnNewCasingsChanging(string value);
    partial void OnNewCasingsChanged();
    partial void OnUnderBalanceChanging(string value);
    partial void OnUnderBalanceChanged();
    partial void OnFluidTypeChanging(string value);
    partial void OnFluidTypeChanged();
    partial void OnTDMudWtChanging(System.Nullable<decimal> value);
    partial void OnTDMudWtChanged();
    partial void OnMaxMudWtChanging(System.Nullable<decimal> value);
    partial void OnMaxMudWtChanged();
    partial void OnCuttingDisposalChanging(string value);
    partial void OnCuttingDisposalChanged();
    partial void OnCoringDaysChanging(System.Nullable<decimal> value);
    partial void OnCoringDaysChanged();
    partial void OnCoringIntervalChanging(System.Nullable<decimal> value);
    partial void OnCoringIntervalChanged();
    partial void OnUReamIntervalChanging(System.Nullable<decimal> value);
    partial void OnUReamIntervalChanged();
    partial void OnLogDaysNotTDChanging(System.Nullable<decimal> value);
    partial void OnLogDaysNotTDChanged();
    partial void OnLogDaysTDChanging(System.Nullable<decimal> value);
    partial void OnLogDaysTDChanged();
    partial void OnLogDaysTotalChanging(System.Nullable<decimal> value);
    partial void OnLogDaysTotalChanged();
    partial void OnUReamDaysChanging(System.Nullable<decimal> value);
    partial void OnUReamDaysChanged();
    partial void OnFEWDChanging(System.Nullable<byte> value);
    partial void OnFEWDChanged();
    partial void OnReservoirFormationChanging(string value);
    partial void OnReservoirFormationChanged();
    partial void OnNewTechniquesChanging(string value);
    partial void OnNewTechniquesChanged();
    partial void OnSlotRecovEnhDaysChanging(System.Nullable<decimal> value);
    partial void OnSlotRecovEnhDaysChanged();
    partial void OnOffSlotRecoveryOpChanging(System.Nullable<byte> value);
    partial void OnOffSlotRecoveryOpChanged();
    partial void OnBatchSetChanging(string value);
    partial void OnBatchSetChanged();
    partial void OnDHoleDaysChanging(System.Nullable<decimal> value);
    partial void OnDHoleDaysChanged();
    partial void OnDHoleDaysExUReamChanging(System.Nullable<decimal> value);
    partial void OnDHoleDaysExUReamChanged();
    partial void OnNoOfSuspendsChanging(System.Nullable<short> value);
    partial void OnNoOfSuspendsChanged();
    partial void OnSuspendReEnterDaysChanging(System.Nullable<decimal> value);
    partial void OnSuspendReEnterDaysChanged();
    partial void OnTotalWellSiteDaysChanging(System.Nullable<decimal> value);
    partial void OnTotalWellSiteDaysChanged();
    partial void OnSpudTDDaysExCorLogUReamChanging(System.Nullable<decimal> value);
    partial void OnSpudTDDaysExCorLogUReamChanged();
    partial void OnWellStatusChanging(string value);
    partial void OnWellStatusChanged();
    partial void OnPAOrSUDaysChanging(System.Nullable<decimal> value);
    partial void OnPAOrSUDaysChanged();
    partial void OnMetresPerDayOldChanging(System.Nullable<decimal> value);
    partial void OnMetresPerDayOldChanged();
    partial void OnMetresPerDayChanging(System.Nullable<decimal> value);
    partial void OnMetresPerDayChanged();
    partial void OnMetresPerDayExCorLogUReamChanging(System.Nullable<decimal> value);
    partial void OnMetresPerDayExCorLogUReamChanged();
    partial void OnDHoleDays1000mOldChanging(System.Nullable<decimal> value);
    partial void OnDHoleDays1000mOldChanged();
    partial void OnDHoleDays1000mChanging(System.Nullable<decimal> value);
    partial void OnDHoleDays1000mChanged();
    partial void OnWOWCoringDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWCoringDaysChanged();
    partial void OnWOWLogDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWLogDaysChanged();
    partial void OnWOWOtherDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWOtherDaysChanged();
    partial void OnITCoringDaysChanging(System.Nullable<decimal> value);
    partial void OnITCoringDaysChanged();
    partial void OnITLogDaysChanging(System.Nullable<decimal> value);
    partial void OnITLogDaysChanged();
    partial void OnITOtherDaysChanging(System.Nullable<decimal> value);
    partial void OnITOtherDaysChanged();
    partial void OnWOWTotalDHoleDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWTotalDHoleDaysChanged();
    partial void OnITTotalDHoleDaysChanging(System.Nullable<decimal> value);
    partial void OnITTotalDHoleDaysChanged();
    partial void OnRigEqFailDaysChanging(System.Nullable<decimal> value);
    partial void OnRigEqFailDaysChanged();
    partial void OnServEqFailDaysChanging(System.Nullable<decimal> value);
    partial void OnServEqFailDaysChanged();
    partial void OnPlatformDaysChanging(System.Nullable<decimal> value);
    partial void OnPlatformDaysChanged();
    partial void OnOpProblemDaysChanging(System.Nullable<decimal> value);
    partial void OnOpProblemDaysChanged();
    partial void OnForceMajeureDaysChanging(System.Nullable<decimal> value);
    partial void OnForceMajeureDaysChanged();
    partial void OnMajorITEventsChanging(string value);
    partial void OnMajorITEventsChanged();
    partial void OnFurtherDetailsChanging(string value);
    partial void OnFurtherDetailsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnTDChartFilenameChanging(string value);
    partial void OnTDChartFilenameChanged();
    partial void OnCalcTotalWowChanging(System.Nullable<decimal> value);
    partial void OnCalcTotalWowChanged();
    partial void OnCalcTotalITChanging(System.Nullable<decimal> value);
    partial void OnCalcTotalITChanged();
    partial void OnCalcWowPercentChanging(System.Nullable<decimal> value);
    partial void OnCalcWowPercentChanged();
    partial void OnCalcITPercentChanging(System.Nullable<decimal> value);
    partial void OnCalcITPercentChanged();
    partial void OnNumContingencyGeolSTChanging(System.Nullable<byte> value);
    partial void OnNumContingencyGeolSTChanged();
    partial void OnUnusedLenContingencyGSChanging(System.Nullable<short> value);
    partial void OnUnusedLenContingencyGSChanged();
    partial void OnUnusedLenLocatorWellChanging(System.Nullable<short> value);
    partial void OnUnusedLenLocatorWellChanged();
    partial void OnGeolSTWhipstockDaysChanging(System.Nullable<decimal> value);
    partial void OnGeolSTWhipstockDaysChanged();
    partial void OnHasTDRecordsChanging(System.Nullable<bool> value);
    partial void OnHasTDRecordsChanged();
    partial void OnExtendedReachPre05Changing(string value);
    partial void OnExtendedReachPre05Changed();
    partial void OnNewCasingCountChanging(System.Nullable<short> value);
    partial void OnNewCasingCountChanged();
    partial void OnAllCasingCountChanging(System.Nullable<short> value);
    partial void OnAllCasingCountChanged();
    partial void OnDrillFloorElevationChanging(System.Nullable<decimal> value);
    partial void OnDrillFloorElevationChanged();
    partial void OnConductorInstalledByDrillingRigChanging(System.Nullable<byte> value);
    partial void OnConductorInstalledByDrillingRigChanged();
    partial void OnOperatorProblemsITChanging(System.Nullable<decimal> value);
    partial void OnOperatorProblemsITChanged();
    partial void OnDownholeProblemsITChanging(System.Nullable<decimal> value);
    partial void OnDownholeProblemsITChanged();
    partial void OnRDIChanging(System.Nullable<int> value);
    partial void OnRDIChanged();
    partial void OnoldRDIChanging(System.Nullable<short> value);
    partial void OnoldRDIChanged();
    partial void OnTotalDaysToEndOfDHPeriodChanging(System.Nullable<decimal> value);
    partial void OnTotalDaysToEndOfDHPeriodChanged();
    partial void OnPASUCompletionDaysChanging(System.Nullable<decimal> value);
    partial void OnPASUCompletionDaysChanged();
    partial void OnCompletionDaysChanging(System.Nullable<decimal> value);
    partial void OnCompletionDaysChanged();
    partial void OnRigContractorITChanging(System.Nullable<decimal> value);
    partial void OnRigContractorITChanged();
    partial void OnServiceCompanyITChanging(System.Nullable<decimal> value);
    partial void OnServiceCompanyITChanged();
    partial void OnExternalProblemsITChanging(System.Nullable<decimal> value);
    partial void OnExternalProblemsITChanged();
    partial void OnDrillingContractorChanging(string value);
    partial void OnDrillingContractorChanged();
    partial void OnMudWeightUnitsChanging(string value);
    partial void OnMudWeightUnitsChanged();
    partial void OnRigMoveDaysChanging(System.Nullable<decimal> value);
    partial void OnRigMoveDaysChanged();
    partial void OnRigMoveInFieldChanging(System.Nullable<bool> value);
    partial void OnRigMoveInFieldChanged();
    partial void OnOtherOpsDaysChanging(System.Nullable<decimal> value);
    partial void OnOtherOpsDaysChanged();
    partial void OnPreExisitingCasing1Changing(string value);
    partial void OnPreExisitingCasing1Changed();
    partial void OnPreExisitingCasing2Changing(string value);
    partial void OnPreExisitingCasing2Changed();
    partial void OnPreExisitingCasing3Changing(string value);
    partial void OnPreExisitingCasing3Changed();
    partial void OnPreExisitingCasing4Changing(string value);
    partial void OnPreExisitingCasing4Changed();
    partial void OnPreExisitingCasing5Changing(string value);
    partial void OnPreExisitingCasing5Changed();
    partial void OnPreExisitingCasing6Changing(string value);
    partial void OnPreExisitingCasing6Changed();
    partial void OnPreExisitingCasing7Changing(string value);
    partial void OnPreExisitingCasing7Changed();
    partial void OnPreExisitingCasing8Changing(string value);
    partial void OnPreExisitingCasing8Changed();
    partial void OnPreExisitingCasing9Changing(string value);
    partial void OnPreExisitingCasing9Changed();
    partial void OnPreExisitingCasing10Changing(string value);
    partial void OnPreExisitingCasing10Changed();
    partial void OnPreExistingCasing11Changing(string value);
    partial void OnPreExistingCasing11Changed();
    partial void OnConductorCasingChanging(string value);
    partial void OnConductorCasingChanged();
    partial void OnSplitConductorChanging(System.Nullable<byte> value);
    partial void OnSplitConductorChanged();
    partial void OnExpandableCasingCountChanging(System.Nullable<byte> value);
    partial void OnExpandableCasingCountChanged();
    partial void OnNewCasing1Changing(string value);
    partial void OnNewCasing1Changed();
    partial void OnNewCasing2Changing(string value);
    partial void OnNewCasing2Changed();
    partial void OnNewCasing3Changing(string value);
    partial void OnNewCasing3Changed();
    partial void OnNewCasing4Changing(string value);
    partial void OnNewCasing4Changed();
    partial void OnNewCasing5Changing(string value);
    partial void OnNewCasing5Changed();
    partial void OnNewCasing6Changing(string value);
    partial void OnNewCasing6Changed();
    partial void OnNewCasing7Changing(string value);
    partial void OnNewCasing7Changed();
    partial void OnNewCasing8Changing(string value);
    partial void OnNewCasing8Changed();
    partial void OnNewCasing9Changing(string value);
    partial void OnNewCasing9Changed();
    partial void OnNewCasing10Changing(string value);
    partial void OnNewCasing10Changed();
    partial void OnCasingDrilledChanging(string value);
    partial void OnCasingDrilledChanged();
    partial void OnDHDaysExCorLogUReam1000mChanging(System.Nullable<decimal> value);
    partial void OnDHDaysExCorLogUReam1000mChanged();
    partial void OnRigMoorSystemChanging(string value);
    partial void OnRigMoorSystemChanged();
    partial void OnMoorDaysChanging(System.Nullable<decimal> value);
    partial void OnMoorDaysChanged();
    partial void OnDeMoorDaysChanging(System.Nullable<decimal> value);
    partial void OnDeMoorDaysChanged();
    partial void OnWOWMoorDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWMoorDaysChanged();
    partial void OnWOWDeMoorDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWDeMoorDaysChanged();
    partial void OnEndOfWellOpsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOfWellOpsDateChanged();
    partial void OnWOWBeforeDeMoorDaysChanging(System.Nullable<decimal> value);
    partial void OnWOWBeforeDeMoorDaysChanged();
    partial void OnAPINumberChanging(string value);
    partial void OnAPINumberChanged();
    partial void OnSubsaltChanging(System.Nullable<byte> value);
    partial void OnSubsaltChanged();
    partial void OnTVDSaltStartChanging(System.Nullable<decimal> value);
    partial void OnTVDSaltStartChanged();
    partial void OnTVDSaltEndChanging(System.Nullable<decimal> value);
    partial void OnTVDSaltEndChanged();
    partial void OnDHDaysExCorLog1000mChanging(System.Nullable<decimal> value);
    partial void OnDHDaysExCorLog1000mChanged();
    partial void OnDHDaysExCorLogChanging(System.Nullable<decimal> value);
    partial void OnDHDaysExCorLogChanged();
    partial void OnMetresPerDayExCorLogChanging(System.Nullable<decimal> value);
    partial void OnMetresPerDayExCorLogChanged();
    partial void OnNPT1000mChanging(System.Nullable<decimal> value);
    partial void OnNPT1000mChanged();
    partial void OnWOW1000mChanging(System.Nullable<decimal> value);
    partial void OnWOW1000mChanged();
    partial void OnProductiveDays1000mChanging(System.Nullable<decimal> value);
    partial void OnProductiveDays1000mChanged();
    partial void OnCalcProductiveDaysChanging(System.Nullable<decimal> value);
    partial void OnCalcProductiveDaysChanged();
    partial void OnGeothermalTypeChanging(string value);
    partial void OnGeothermalTypeChanged();
    #endregion
		
		public tDPR_StagingWellData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WellID
		{
			get
			{
				return this._WellID;
			}
			set
			{
				if ((this._WellID != value))
				{
					this.OnWellIDChanging(value);
					this.SendPropertyChanging();
					this._WellID = value;
					this.SendPropertyChanged("WellID");
					this.OnWellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoleType", DbType="Char(1)")]
		public System.Nullable<char> HoleType
		{
			get
			{
				return this._HoleType;
			}
			set
			{
				if ((this._HoleType != value))
				{
					this.OnHoleTypeChanging(value);
					this.SendPropertyChanging();
					this._HoleType = value;
					this.SendPropertyChanged("HoleType");
					this.OnHoleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpudDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SpudDate
		{
			get
			{
				return this._SpudDate;
			}
			set
			{
				if ((this._SpudDate != value))
				{
					this.OnSpudDateChanging(value);
					this.SendPropertyChanging();
					this._SpudDate = value;
					this.SendPropertyChanged("SpudDate");
					this.OnSpudDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DHoleEndDate
		{
			get
			{
				return this._DHoleEndDate;
			}
			set
			{
				if ((this._DHoleEndDate != value))
				{
					this.OnDHoleEndDateChanging(value);
					this.SendPropertyChanging();
					this._DHoleEndDate = value;
					this.SendPropertyChanged("DHoleEndDate");
					this.OnDHoleEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocatorWell", DbType="TinyInt")]
		public System.Nullable<byte> LocatorWell
		{
			get
			{
				return this._LocatorWell;
			}
			set
			{
				if ((this._LocatorWell != value))
				{
					this.OnLocatorWellChanging(value);
					this.SendPropertyChanging();
					this._LocatorWell = value;
					this.SendPropertyChanged("LocatorWell");
					this.OnLocatorWellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multilateral", DbType="TinyInt")]
		public System.Nullable<byte> Multilateral
		{
			get
			{
				return this._Multilateral;
			}
			set
			{
				if ((this._Multilateral != value))
				{
					this.OnMultilateralChanging(value);
					this.SendPropertyChanging();
					this._Multilateral = value;
					this.SendPropertyChanged("Multilateral");
					this.OnMultilateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JunctionType", DbType="VarChar(10)")]
		public string JunctionType
		{
			get
			{
				return this._JunctionType;
			}
			set
			{
				if ((this._JunctionType != value))
				{
					this.OnJunctionTypeChanging(value);
					this.SendPropertyChanging();
					this._JunctionType = value;
					this.SendPropertyChanged("JunctionType");
					this.OnJunctionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLaterals", DbType="TinyInt")]
		public System.Nullable<byte> NumLaterals
		{
			get
			{
				return this._NumLaterals;
			}
			set
			{
				if ((this._NumLaterals != value))
				{
					this.OnNumLateralsChanging(value);
					this.SendPropertyChanging();
					this._NumLaterals = value;
					this.SendPropertyChanged("NumLaterals");
					this.OnNumLateralsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumMechanicalSTracks", DbType="TinyInt")]
		public System.Nullable<byte> NumMechanicalSTracks
		{
			get
			{
				return this._NumMechanicalSTracks;
			}
			set
			{
				if ((this._NumMechanicalSTracks != value))
				{
					this.OnNumMechanicalSTracksChanging(value);
					this.SendPropertyChanging();
					this._NumMechanicalSTracks = value;
					this.SendPropertyChanged("NumMechanicalSTracks");
					this.OnNumMechanicalSTracksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReSpud", DbType="TinyInt")]
		public System.Nullable<byte> ReSpud
		{
			get
			{
				return this._ReSpud;
			}
			set
			{
				if ((this._ReSpud != value))
				{
					this.OnReSpudChanging(value);
					this.SendPropertyChanging();
					this._ReSpud = value;
					this.SendPropertyChanged("ReSpud");
					this.OnReSpudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalName", DbType="NVarChar(50)")]
		public string OriginalName
		{
			get
			{
				return this._OriginalName;
			}
			set
			{
				if ((this._OriginalName != value))
				{
					this.OnOriginalNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalName = value;
					this.SendPropertyChanged("OriginalName");
					this.OnOriginalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellType", DbType="VarChar(2)")]
		public string WellType
		{
			get
			{
				return this._WellType;
			}
			set
			{
				if ((this._WellType != value))
				{
					this.OnWellTypeChanging(value);
					this.SendPropertyChanging();
					this._WellType = value;
					this.SendPropertyChanged("WellType");
					this.OnWellTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayType", DbType="VarChar(2)")]
		public string PlayType
		{
			get
			{
				return this._PlayType;
			}
			set
			{
				if ((this._PlayType != value))
				{
					this.OnPlayTypeChanging(value);
					this.SendPropertyChanging();
					this._PlayType = value;
					this.SendPropertyChanged("PlayType");
					this.OnPlayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HP", DbType="TinyInt")]
		public System.Nullable<byte> HP
		{
			get
			{
				return this._HP;
			}
			set
			{
				if ((this._HP != value))
				{
					this.OnHPChanging(value);
					this.SendPropertyChanging();
					this._HP = value;
					this.SendPropertyChanged("HP");
					this.OnHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HT", DbType="TinyInt")]
		public System.Nullable<byte> HT
		{
			get
			{
				return this._HT;
			}
			set
			{
				if ((this._HT != value))
				{
					this.OnHTChanging(value);
					this.SendPropertyChanging();
					this._HT = value;
					this.SendPropertyChanged("HT");
					this.OnHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigType", DbType="VarChar(10)")]
		public string RigType
		{
			get
			{
				return this._RigType;
			}
			set
			{
				if ((this._RigType != value))
				{
					this.OnRigTypeChanging(value);
					this.SendPropertyChanging();
					this._RigType = value;
					this.SendPropertyChanged("RigType");
					this.OnRigTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigName", DbType="NVarChar(60)")]
		public string RigName
		{
			get
			{
				return this._RigName;
			}
			set
			{
				if ((this._RigName != value))
				{
					this.OnRigNameChanging(value);
					this.SendPropertyChanging();
					this._RigName = value;
					this.SendPropertyChanged("RigName");
					this.OnRigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DualActivityRig", DbType="TinyInt")]
		public System.Nullable<byte> DualActivityRig
		{
			get
			{
				return this._DualActivityRig;
			}
			set
			{
				if ((this._DualActivityRig != value))
				{
					this.OnDualActivityRigChanging(value);
					this.SendPropertyChanging();
					this._DualActivityRig = value;
					this.SendPropertyChanged("DualActivityRig");
					this.OnDualActivityRigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillMethod", DbType="VarChar(10)")]
		public string DrillMethod
		{
			get
			{
				return this._DrillMethod;
			}
			set
			{
				if ((this._DrillMethod != value))
				{
					this.OnDrillMethodChanging(value);
					this.SendPropertyChanging();
					this._DrillMethod = value;
					this.SendPropertyChanged("DrillMethod");
					this.OnDrillMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exceptional", DbType="TinyInt")]
		public System.Nullable<byte> Exceptional
		{
			get
			{
				return this._Exceptional;
			}
			set
			{
				if ((this._Exceptional != value))
				{
					this.OnExceptionalChanging(value);
					this.SendPropertyChanging();
					this._Exceptional = value;
					this.SendPropertyChanged("Exceptional");
					this.OnExceptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex", DbType="TinyInt")]
		public System.Nullable<byte> Complex
		{
			get
			{
				return this._Complex;
			}
			set
			{
				if ((this._Complex != value))
				{
					this.OnComplexChanging(value);
					this.SendPropertyChanging();
					this._Complex = value;
					this.SendPropertyChanged("Complex");
					this.OnComplexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterDepth", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WaterDepth
		{
			get
			{
				return this._WaterDepth;
			}
			set
			{
				if ((this._WaterDepth != value))
				{
					this.OnWaterDepthChanging(value);
					this.SendPropertyChanging();
					this._WaterDepth = value;
					this.SendPropertyChanged("WaterDepth");
					this.OnWaterDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpudDepth", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SpudDepth
		{
			get
			{
				return this._SpudDepth;
			}
			set
			{
				if ((this._SpudDepth != value))
				{
					this.OnSpudDepthChanging(value);
					this.SendPropertyChanging();
					this._SpudDepth = value;
					this.SendPropertyChanged("SpudDepth");
					this.OnSpudDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTD", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> MTD
		{
			get
			{
				return this._MTD;
			}
			set
			{
				if ((this._MTD != value))
				{
					this.OnMTDChanging(value);
					this.SendPropertyChanging();
					this._MTD = value;
					this.SendPropertyChanged("MTD");
					this.OnMTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TVD", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TVD
		{
			get
			{
				return this._TVD;
			}
			set
			{
				if ((this._TVD != value))
				{
					this.OnTVDChanging(value);
					this.SendPropertyChanging();
					this._TVD = value;
					this.SendPropertyChanged("TVD");
					this.OnTVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillInterval", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DrillInterval
		{
			get
			{
				return this._DrillInterval;
			}
			set
			{
				if ((this._DrillInterval != value))
				{
					this.OnDrillIntervalChanging(value);
					this.SendPropertyChanging();
					this._DrillInterval = value;
					this.SendPropertyChanged("DrillInterval");
					this.OnDrillIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HorizDisplacement", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> HorizDisplacement
		{
			get
			{
				return this._HorizDisplacement;
			}
			set
			{
				if ((this._HorizDisplacement != value))
				{
					this.OnHorizDisplacementChanging(value);
					this.SendPropertyChanging();
					this._HorizDisplacement = value;
					this.SendPropertyChanged("HorizDisplacement");
					this.OnHorizDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspectRatio", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> AspectRatio
		{
			get
			{
				return this._AspectRatio;
			}
			set
			{
				if ((this._AspectRatio != value))
				{
					this.OnAspectRatioChanging(value);
					this.SendPropertyChanging();
					this._AspectRatio = value;
					this.SendPropertyChanged("AspectRatio");
					this.OnAspectRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplexRatio", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ComplexRatio
		{
			get
			{
				return this._ComplexRatio;
			}
			set
			{
				if ((this._ComplexRatio != value))
				{
					this.OnComplexRatioChanging(value);
					this.SendPropertyChanging();
					this._ComplexRatio = value;
					this.SendPropertyChanged("ComplexRatio");
					this.OnComplexRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSectionLength", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> TotalSectionLength
		{
			get
			{
				return this._TotalSectionLength;
			}
			set
			{
				if ((this._TotalSectionLength != value))
				{
					this.OnTotalSectionLengthChanging(value);
					this.SendPropertyChanging();
					this._TotalSectionLength = value;
					this.SendPropertyChanged("TotalSectionLength");
					this.OnTotalSectionLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAngle", DbType="SmallInt")]
		public System.Nullable<short> MaxAngle
		{
			get
			{
				return this._MaxAngle;
			}
			set
			{
				if ((this._MaxAngle != value))
				{
					this.OnMaxAngleChanging(value);
					this.SendPropertyChanging();
					this._MaxAngle = value;
					this.SendPropertyChanged("MaxAngle");
					this.OnMaxAngleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedReach", DbType="VarChar(3)")]
		public string ExtendedReach
		{
			get
			{
				return this._ExtendedReach;
			}
			set
			{
				if ((this._ExtendedReach != value))
				{
					this.OnExtendedReachChanging(value);
					this.SendPropertyChanging();
					this._ExtendedReach = value;
					this.SendPropertyChanged("ExtendedReach");
					this.OnExtendedReachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalBitSize", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> FinalBitSize
		{
			get
			{
				return this._FinalBitSize;
			}
			set
			{
				if ((this._FinalBitSize != value))
				{
					this.OnFinalBitSizeChanging(value);
					this.SendPropertyChanging();
					this._FinalBitSize = value;
					this.SendPropertyChanged("FinalBitSize");
					this.OnFinalBitSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCasings", DbType="VarChar(100)")]
		public string PreCasings
		{
			get
			{
				return this._PreCasings;
			}
			set
			{
				if ((this._PreCasings != value))
				{
					this.OnPreCasingsChanging(value);
					this.SendPropertyChanging();
					this._PreCasings = value;
					this.SendPropertyChanged("PreCasings");
					this.OnPreCasingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasings", DbType="VarChar(100)")]
		public string NewCasings
		{
			get
			{
				return this._NewCasings;
			}
			set
			{
				if ((this._NewCasings != value))
				{
					this.OnNewCasingsChanging(value);
					this.SendPropertyChanging();
					this._NewCasings = value;
					this.SendPropertyChanged("NewCasings");
					this.OnNewCasingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderBalance", DbType="VarChar(2)")]
		public string UnderBalance
		{
			get
			{
				return this._UnderBalance;
			}
			set
			{
				if ((this._UnderBalance != value))
				{
					this.OnUnderBalanceChanging(value);
					this.SendPropertyChanging();
					this._UnderBalance = value;
					this.SendPropertyChanged("UnderBalance");
					this.OnUnderBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FluidType", DbType="VarChar(10)")]
		public string FluidType
		{
			get
			{
				return this._FluidType;
			}
			set
			{
				if ((this._FluidType != value))
				{
					this.OnFluidTypeChanging(value);
					this.SendPropertyChanging();
					this._FluidType = value;
					this.SendPropertyChanged("FluidType");
					this.OnFluidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDMudWt", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TDMudWt
		{
			get
			{
				return this._TDMudWt;
			}
			set
			{
				if ((this._TDMudWt != value))
				{
					this.OnTDMudWtChanging(value);
					this.SendPropertyChanging();
					this._TDMudWt = value;
					this.SendPropertyChanged("TDMudWt");
					this.OnTDMudWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMudWt", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> MaxMudWt
		{
			get
			{
				return this._MaxMudWt;
			}
			set
			{
				if ((this._MaxMudWt != value))
				{
					this.OnMaxMudWtChanging(value);
					this.SendPropertyChanging();
					this._MaxMudWt = value;
					this.SendPropertyChanged("MaxMudWt");
					this.OnMaxMudWtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuttingDisposal", DbType="VarChar(10)")]
		public string CuttingDisposal
		{
			get
			{
				return this._CuttingDisposal;
			}
			set
			{
				if ((this._CuttingDisposal != value))
				{
					this.OnCuttingDisposalChanging(value);
					this.SendPropertyChanging();
					this._CuttingDisposal = value;
					this.SendPropertyChanged("CuttingDisposal");
					this.OnCuttingDisposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoringDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> CoringDays
		{
			get
			{
				return this._CoringDays;
			}
			set
			{
				if ((this._CoringDays != value))
				{
					this.OnCoringDaysChanging(value);
					this.SendPropertyChanging();
					this._CoringDays = value;
					this.SendPropertyChanged("CoringDays");
					this.OnCoringDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoringInterval", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> CoringInterval
		{
			get
			{
				return this._CoringInterval;
			}
			set
			{
				if ((this._CoringInterval != value))
				{
					this.OnCoringIntervalChanging(value);
					this.SendPropertyChanging();
					this._CoringInterval = value;
					this.SendPropertyChanged("CoringInterval");
					this.OnCoringIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UReamInterval", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> UReamInterval
		{
			get
			{
				return this._UReamInterval;
			}
			set
			{
				if ((this._UReamInterval != value))
				{
					this.OnUReamIntervalChanging(value);
					this.SendPropertyChanging();
					this._UReamInterval = value;
					this.SendPropertyChanged("UReamInterval");
					this.OnUReamIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDaysNotTD", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> LogDaysNotTD
		{
			get
			{
				return this._LogDaysNotTD;
			}
			set
			{
				if ((this._LogDaysNotTD != value))
				{
					this.OnLogDaysNotTDChanging(value);
					this.SendPropertyChanging();
					this._LogDaysNotTD = value;
					this.SendPropertyChanged("LogDaysNotTD");
					this.OnLogDaysNotTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDaysTD", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> LogDaysTD
		{
			get
			{
				return this._LogDaysTD;
			}
			set
			{
				if ((this._LogDaysTD != value))
				{
					this.OnLogDaysTDChanging(value);
					this.SendPropertyChanging();
					this._LogDaysTD = value;
					this.SendPropertyChanged("LogDaysTD");
					this.OnLogDaysTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDaysTotal", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> LogDaysTotal
		{
			get
			{
				return this._LogDaysTotal;
			}
			set
			{
				if ((this._LogDaysTotal != value))
				{
					this.OnLogDaysTotalChanging(value);
					this.SendPropertyChanging();
					this._LogDaysTotal = value;
					this.SendPropertyChanged("LogDaysTotal");
					this.OnLogDaysTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UReamDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> UReamDays
		{
			get
			{
				return this._UReamDays;
			}
			set
			{
				if ((this._UReamDays != value))
				{
					this.OnUReamDaysChanging(value);
					this.SendPropertyChanging();
					this._UReamDays = value;
					this.SendPropertyChanged("UReamDays");
					this.OnUReamDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEWD", DbType="TinyInt")]
		public System.Nullable<byte> FEWD
		{
			get
			{
				return this._FEWD;
			}
			set
			{
				if ((this._FEWD != value))
				{
					this.OnFEWDChanging(value);
					this.SendPropertyChanging();
					this._FEWD = value;
					this.SendPropertyChanged("FEWD");
					this.OnFEWDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservoirFormation", DbType="VarChar(20)")]
		public string ReservoirFormation
		{
			get
			{
				return this._ReservoirFormation;
			}
			set
			{
				if ((this._ReservoirFormation != value))
				{
					this.OnReservoirFormationChanging(value);
					this.SendPropertyChanging();
					this._ReservoirFormation = value;
					this.SendPropertyChanged("ReservoirFormation");
					this.OnReservoirFormationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTechniques", DbType="VarChar(10)")]
		public string NewTechniques
		{
			get
			{
				return this._NewTechniques;
			}
			set
			{
				if ((this._NewTechniques != value))
				{
					this.OnNewTechniquesChanging(value);
					this.SendPropertyChanging();
					this._NewTechniques = value;
					this.SendPropertyChanged("NewTechniques");
					this.OnNewTechniquesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotRecovEnhDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SlotRecovEnhDays
		{
			get
			{
				return this._SlotRecovEnhDays;
			}
			set
			{
				if ((this._SlotRecovEnhDays != value))
				{
					this.OnSlotRecovEnhDaysChanging(value);
					this.SendPropertyChanging();
					this._SlotRecovEnhDays = value;
					this.SendPropertyChanged("SlotRecovEnhDays");
					this.OnSlotRecovEnhDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffSlotRecoveryOp", DbType="TinyInt")]
		public System.Nullable<byte> OffSlotRecoveryOp
		{
			get
			{
				return this._OffSlotRecoveryOp;
			}
			set
			{
				if ((this._OffSlotRecoveryOp != value))
				{
					this.OnOffSlotRecoveryOpChanging(value);
					this.SendPropertyChanging();
					this._OffSlotRecoveryOp = value;
					this.SendPropertyChanged("OffSlotRecoveryOp");
					this.OnOffSlotRecoveryOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchSet", DbType="VarChar(50)")]
		public string BatchSet
		{
			get
			{
				return this._BatchSet;
			}
			set
			{
				if ((this._BatchSet != value))
				{
					this.OnBatchSetChanging(value);
					this.SendPropertyChanging();
					this._BatchSet = value;
					this.SendPropertyChanged("BatchSet");
					this.OnBatchSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DHoleDays
		{
			get
			{
				return this._DHoleDays;
			}
			set
			{
				if ((this._DHoleDays != value))
				{
					this.OnDHoleDaysChanging(value);
					this.SendPropertyChanging();
					this._DHoleDays = value;
					this.SendPropertyChanged("DHoleDays");
					this.OnDHoleDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleDaysExUReam", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DHoleDaysExUReam
		{
			get
			{
				return this._DHoleDaysExUReam;
			}
			set
			{
				if ((this._DHoleDaysExUReam != value))
				{
					this.OnDHoleDaysExUReamChanging(value);
					this.SendPropertyChanging();
					this._DHoleDaysExUReam = value;
					this.SendPropertyChanged("DHoleDaysExUReam");
					this.OnDHoleDaysExUReamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfSuspends", DbType="SmallInt")]
		public System.Nullable<short> NoOfSuspends
		{
			get
			{
				return this._NoOfSuspends;
			}
			set
			{
				if ((this._NoOfSuspends != value))
				{
					this.OnNoOfSuspendsChanging(value);
					this.SendPropertyChanging();
					this._NoOfSuspends = value;
					this.SendPropertyChanged("NoOfSuspends");
					this.OnNoOfSuspendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendReEnterDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SuspendReEnterDays
		{
			get
			{
				return this._SuspendReEnterDays;
			}
			set
			{
				if ((this._SuspendReEnterDays != value))
				{
					this.OnSuspendReEnterDaysChanging(value);
					this.SendPropertyChanging();
					this._SuspendReEnterDays = value;
					this.SendPropertyChanged("SuspendReEnterDays");
					this.OnSuspendReEnterDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWellSiteDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TotalWellSiteDays
		{
			get
			{
				return this._TotalWellSiteDays;
			}
			set
			{
				if ((this._TotalWellSiteDays != value))
				{
					this.OnTotalWellSiteDaysChanging(value);
					this.SendPropertyChanging();
					this._TotalWellSiteDays = value;
					this.SendPropertyChanged("TotalWellSiteDays");
					this.OnTotalWellSiteDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpudTDDaysExCorLogUReam", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SpudTDDaysExCorLogUReam
		{
			get
			{
				return this._SpudTDDaysExCorLogUReam;
			}
			set
			{
				if ((this._SpudTDDaysExCorLogUReam != value))
				{
					this.OnSpudTDDaysExCorLogUReamChanging(value);
					this.SendPropertyChanging();
					this._SpudTDDaysExCorLogUReam = value;
					this.SendPropertyChanged("SpudTDDaysExCorLogUReam");
					this.OnSpudTDDaysExCorLogUReamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WellStatus", DbType="VarChar(20)")]
		public string WellStatus
		{
			get
			{
				return this._WellStatus;
			}
			set
			{
				if ((this._WellStatus != value))
				{
					this.OnWellStatusChanging(value);
					this.SendPropertyChanging();
					this._WellStatus = value;
					this.SendPropertyChanged("WellStatus");
					this.OnWellStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAOrSUDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> PAOrSUDays
		{
			get
			{
				return this._PAOrSUDays;
			}
			set
			{
				if ((this._PAOrSUDays != value))
				{
					this.OnPAOrSUDaysChanging(value);
					this.SendPropertyChanging();
					this._PAOrSUDays = value;
					this.SendPropertyChanged("PAOrSUDays");
					this.OnPAOrSUDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetresPerDayOld", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> MetresPerDayOld
		{
			get
			{
				return this._MetresPerDayOld;
			}
			set
			{
				if ((this._MetresPerDayOld != value))
				{
					this.OnMetresPerDayOldChanging(value);
					this.SendPropertyChanging();
					this._MetresPerDayOld = value;
					this.SendPropertyChanged("MetresPerDayOld");
					this.OnMetresPerDayOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetresPerDay", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> MetresPerDay
		{
			get
			{
				return this._MetresPerDay;
			}
			set
			{
				if ((this._MetresPerDay != value))
				{
					this.OnMetresPerDayChanging(value);
					this.SendPropertyChanging();
					this._MetresPerDay = value;
					this.SendPropertyChanged("MetresPerDay");
					this.OnMetresPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetresPerDayExCorLogUReam", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> MetresPerDayExCorLogUReam
		{
			get
			{
				return this._MetresPerDayExCorLogUReam;
			}
			set
			{
				if ((this._MetresPerDayExCorLogUReam != value))
				{
					this.OnMetresPerDayExCorLogUReamChanging(value);
					this.SendPropertyChanging();
					this._MetresPerDayExCorLogUReam = value;
					this.SendPropertyChanged("MetresPerDayExCorLogUReam");
					this.OnMetresPerDayExCorLogUReamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleDays1000mOld", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> DHoleDays1000mOld
		{
			get
			{
				return this._DHoleDays1000mOld;
			}
			set
			{
				if ((this._DHoleDays1000mOld != value))
				{
					this.OnDHoleDays1000mOldChanging(value);
					this.SendPropertyChanging();
					this._DHoleDays1000mOld = value;
					this.SendPropertyChanged("DHoleDays1000mOld");
					this.OnDHoleDays1000mOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHoleDays1000m", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> DHoleDays1000m
		{
			get
			{
				return this._DHoleDays1000m;
			}
			set
			{
				if ((this._DHoleDays1000m != value))
				{
					this.OnDHoleDays1000mChanging(value);
					this.SendPropertyChanging();
					this._DHoleDays1000m = value;
					this.SendPropertyChanged("DHoleDays1000m");
					this.OnDHoleDays1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWCoringDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWCoringDays
		{
			get
			{
				return this._WOWCoringDays;
			}
			set
			{
				if ((this._WOWCoringDays != value))
				{
					this.OnWOWCoringDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWCoringDays = value;
					this.SendPropertyChanged("WOWCoringDays");
					this.OnWOWCoringDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWLogDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWLogDays
		{
			get
			{
				return this._WOWLogDays;
			}
			set
			{
				if ((this._WOWLogDays != value))
				{
					this.OnWOWLogDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWLogDays = value;
					this.SendPropertyChanged("WOWLogDays");
					this.OnWOWLogDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWOtherDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWOtherDays
		{
			get
			{
				return this._WOWOtherDays;
			}
			set
			{
				if ((this._WOWOtherDays != value))
				{
					this.OnWOWOtherDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWOtherDays = value;
					this.SendPropertyChanged("WOWOtherDays");
					this.OnWOWOtherDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITCoringDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ITCoringDays
		{
			get
			{
				return this._ITCoringDays;
			}
			set
			{
				if ((this._ITCoringDays != value))
				{
					this.OnITCoringDaysChanging(value);
					this.SendPropertyChanging();
					this._ITCoringDays = value;
					this.SendPropertyChanged("ITCoringDays");
					this.OnITCoringDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITLogDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ITLogDays
		{
			get
			{
				return this._ITLogDays;
			}
			set
			{
				if ((this._ITLogDays != value))
				{
					this.OnITLogDaysChanging(value);
					this.SendPropertyChanging();
					this._ITLogDays = value;
					this.SendPropertyChanged("ITLogDays");
					this.OnITLogDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITOtherDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ITOtherDays
		{
			get
			{
				return this._ITOtherDays;
			}
			set
			{
				if ((this._ITOtherDays != value))
				{
					this.OnITOtherDaysChanging(value);
					this.SendPropertyChanging();
					this._ITOtherDays = value;
					this.SendPropertyChanged("ITOtherDays");
					this.OnITOtherDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWTotalDHoleDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWTotalDHoleDays
		{
			get
			{
				return this._WOWTotalDHoleDays;
			}
			set
			{
				if ((this._WOWTotalDHoleDays != value))
				{
					this.OnWOWTotalDHoleDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWTotalDHoleDays = value;
					this.SendPropertyChanged("WOWTotalDHoleDays");
					this.OnWOWTotalDHoleDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITTotalDHoleDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ITTotalDHoleDays
		{
			get
			{
				return this._ITTotalDHoleDays;
			}
			set
			{
				if ((this._ITTotalDHoleDays != value))
				{
					this.OnITTotalDHoleDaysChanging(value);
					this.SendPropertyChanging();
					this._ITTotalDHoleDays = value;
					this.SendPropertyChanged("ITTotalDHoleDays");
					this.OnITTotalDHoleDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigEqFailDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> RigEqFailDays
		{
			get
			{
				return this._RigEqFailDays;
			}
			set
			{
				if ((this._RigEqFailDays != value))
				{
					this.OnRigEqFailDaysChanging(value);
					this.SendPropertyChanging();
					this._RigEqFailDays = value;
					this.SendPropertyChanged("RigEqFailDays");
					this.OnRigEqFailDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServEqFailDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ServEqFailDays
		{
			get
			{
				return this._ServEqFailDays;
			}
			set
			{
				if ((this._ServEqFailDays != value))
				{
					this.OnServEqFailDaysChanging(value);
					this.SendPropertyChanging();
					this._ServEqFailDays = value;
					this.SendPropertyChanged("ServEqFailDays");
					this.OnServEqFailDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> PlatformDays
		{
			get
			{
				return this._PlatformDays;
			}
			set
			{
				if ((this._PlatformDays != value))
				{
					this.OnPlatformDaysChanging(value);
					this.SendPropertyChanging();
					this._PlatformDays = value;
					this.SendPropertyChanged("PlatformDays");
					this.OnPlatformDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpProblemDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> OpProblemDays
		{
			get
			{
				return this._OpProblemDays;
			}
			set
			{
				if ((this._OpProblemDays != value))
				{
					this.OnOpProblemDaysChanging(value);
					this.SendPropertyChanging();
					this._OpProblemDays = value;
					this.SendPropertyChanged("OpProblemDays");
					this.OnOpProblemDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceMajeureDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ForceMajeureDays
		{
			get
			{
				return this._ForceMajeureDays;
			}
			set
			{
				if ((this._ForceMajeureDays != value))
				{
					this.OnForceMajeureDaysChanging(value);
					this.SendPropertyChanging();
					this._ForceMajeureDays = value;
					this.SendPropertyChanged("ForceMajeureDays");
					this.OnForceMajeureDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorITEvents", DbType="NVarChar(1000)")]
		public string MajorITEvents
		{
			get
			{
				return this._MajorITEvents;
			}
			set
			{
				if ((this._MajorITEvents != value))
				{
					this.OnMajorITEventsChanging(value);
					this.SendPropertyChanging();
					this._MajorITEvents = value;
					this.SendPropertyChanged("MajorITEvents");
					this.OnMajorITEventsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FurtherDetails", DbType="NVarChar(1000)")]
		public string FurtherDetails
		{
			get
			{
				return this._FurtherDetails;
			}
			set
			{
				if ((this._FurtherDetails != value))
				{
					this.OnFurtherDetailsChanging(value);
					this.SendPropertyChanging();
					this._FurtherDetails = value;
					this.SendPropertyChanged("FurtherDetails");
					this.OnFurtherDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(2000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDChartFilename", DbType="NVarChar(100)")]
		public string TDChartFilename
		{
			get
			{
				return this._TDChartFilename;
			}
			set
			{
				if ((this._TDChartFilename != value))
				{
					this.OnTDChartFilenameChanging(value);
					this.SendPropertyChanging();
					this._TDChartFilename = value;
					this.SendPropertyChanged("TDChartFilename");
					this.OnTDChartFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcTotalWow", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> CalcTotalWow
		{
			get
			{
				return this._CalcTotalWow;
			}
			set
			{
				if ((this._CalcTotalWow != value))
				{
					this.OnCalcTotalWowChanging(value);
					this.SendPropertyChanging();
					this._CalcTotalWow = value;
					this.SendPropertyChanged("CalcTotalWow");
					this.OnCalcTotalWowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcTotalIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> CalcTotalIT
		{
			get
			{
				return this._CalcTotalIT;
			}
			set
			{
				if ((this._CalcTotalIT != value))
				{
					this.OnCalcTotalITChanging(value);
					this.SendPropertyChanging();
					this._CalcTotalIT = value;
					this.SendPropertyChanged("CalcTotalIT");
					this.OnCalcTotalITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcWowPercent", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> CalcWowPercent
		{
			get
			{
				return this._CalcWowPercent;
			}
			set
			{
				if ((this._CalcWowPercent != value))
				{
					this.OnCalcWowPercentChanging(value);
					this.SendPropertyChanging();
					this._CalcWowPercent = value;
					this.SendPropertyChanged("CalcWowPercent");
					this.OnCalcWowPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcITPercent", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> CalcITPercent
		{
			get
			{
				return this._CalcITPercent;
			}
			set
			{
				if ((this._CalcITPercent != value))
				{
					this.OnCalcITPercentChanging(value);
					this.SendPropertyChanging();
					this._CalcITPercent = value;
					this.SendPropertyChanged("CalcITPercent");
					this.OnCalcITPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumContingencyGeolST", DbType="TinyInt")]
		public System.Nullable<byte> NumContingencyGeolST
		{
			get
			{
				return this._NumContingencyGeolST;
			}
			set
			{
				if ((this._NumContingencyGeolST != value))
				{
					this.OnNumContingencyGeolSTChanging(value);
					this.SendPropertyChanging();
					this._NumContingencyGeolST = value;
					this.SendPropertyChanged("NumContingencyGeolST");
					this.OnNumContingencyGeolSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnusedLenContingencyGS", DbType="SmallInt")]
		public System.Nullable<short> UnusedLenContingencyGS
		{
			get
			{
				return this._UnusedLenContingencyGS;
			}
			set
			{
				if ((this._UnusedLenContingencyGS != value))
				{
					this.OnUnusedLenContingencyGSChanging(value);
					this.SendPropertyChanging();
					this._UnusedLenContingencyGS = value;
					this.SendPropertyChanged("UnusedLenContingencyGS");
					this.OnUnusedLenContingencyGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnusedLenLocatorWell", DbType="SmallInt")]
		public System.Nullable<short> UnusedLenLocatorWell
		{
			get
			{
				return this._UnusedLenLocatorWell;
			}
			set
			{
				if ((this._UnusedLenLocatorWell != value))
				{
					this.OnUnusedLenLocatorWellChanging(value);
					this.SendPropertyChanging();
					this._UnusedLenLocatorWell = value;
					this.SendPropertyChanged("UnusedLenLocatorWell");
					this.OnUnusedLenLocatorWellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeolSTWhipstockDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> GeolSTWhipstockDays
		{
			get
			{
				return this._GeolSTWhipstockDays;
			}
			set
			{
				if ((this._GeolSTWhipstockDays != value))
				{
					this.OnGeolSTWhipstockDaysChanging(value);
					this.SendPropertyChanging();
					this._GeolSTWhipstockDays = value;
					this.SendPropertyChanged("GeolSTWhipstockDays");
					this.OnGeolSTWhipstockDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTDRecords", DbType="Bit")]
		public System.Nullable<bool> HasTDRecords
		{
			get
			{
				return this._HasTDRecords;
			}
			set
			{
				if ((this._HasTDRecords != value))
				{
					this.OnHasTDRecordsChanging(value);
					this.SendPropertyChanging();
					this._HasTDRecords = value;
					this.SendPropertyChanged("HasTDRecords");
					this.OnHasTDRecordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedReachPre05", DbType="VarChar(3)")]
		public string ExtendedReachPre05
		{
			get
			{
				return this._ExtendedReachPre05;
			}
			set
			{
				if ((this._ExtendedReachPre05 != value))
				{
					this.OnExtendedReachPre05Changing(value);
					this.SendPropertyChanging();
					this._ExtendedReachPre05 = value;
					this.SendPropertyChanged("ExtendedReachPre05");
					this.OnExtendedReachPre05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasingCount", DbType="SmallInt")]
		public System.Nullable<short> NewCasingCount
		{
			get
			{
				return this._NewCasingCount;
			}
			set
			{
				if ((this._NewCasingCount != value))
				{
					this.OnNewCasingCountChanging(value);
					this.SendPropertyChanging();
					this._NewCasingCount = value;
					this.SendPropertyChanged("NewCasingCount");
					this.OnNewCasingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllCasingCount", DbType="SmallInt")]
		public System.Nullable<short> AllCasingCount
		{
			get
			{
				return this._AllCasingCount;
			}
			set
			{
				if ((this._AllCasingCount != value))
				{
					this.OnAllCasingCountChanging(value);
					this.SendPropertyChanging();
					this._AllCasingCount = value;
					this.SendPropertyChanged("AllCasingCount");
					this.OnAllCasingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillFloorElevation", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DrillFloorElevation
		{
			get
			{
				return this._DrillFloorElevation;
			}
			set
			{
				if ((this._DrillFloorElevation != value))
				{
					this.OnDrillFloorElevationChanging(value);
					this.SendPropertyChanging();
					this._DrillFloorElevation = value;
					this.SendPropertyChanged("DrillFloorElevation");
					this.OnDrillFloorElevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConductorInstalledByDrillingRig", DbType="TinyInt")]
		public System.Nullable<byte> ConductorInstalledByDrillingRig
		{
			get
			{
				return this._ConductorInstalledByDrillingRig;
			}
			set
			{
				if ((this._ConductorInstalledByDrillingRig != value))
				{
					this.OnConductorInstalledByDrillingRigChanging(value);
					this.SendPropertyChanging();
					this._ConductorInstalledByDrillingRig = value;
					this.SendPropertyChanged("ConductorInstalledByDrillingRig");
					this.OnConductorInstalledByDrillingRigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorProblemsIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> OperatorProblemsIT
		{
			get
			{
				return this._OperatorProblemsIT;
			}
			set
			{
				if ((this._OperatorProblemsIT != value))
				{
					this.OnOperatorProblemsITChanging(value);
					this.SendPropertyChanging();
					this._OperatorProblemsIT = value;
					this.SendPropertyChanged("OperatorProblemsIT");
					this.OnOperatorProblemsITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownholeProblemsIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DownholeProblemsIT
		{
			get
			{
				return this._DownholeProblemsIT;
			}
			set
			{
				if ((this._DownholeProblemsIT != value))
				{
					this.OnDownholeProblemsITChanging(value);
					this.SendPropertyChanging();
					this._DownholeProblemsIT = value;
					this.SendPropertyChanged("DownholeProblemsIT");
					this.OnDownholeProblemsITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDI", DbType="Int")]
		public System.Nullable<int> RDI
		{
			get
			{
				return this._RDI;
			}
			set
			{
				if ((this._RDI != value))
				{
					this.OnRDIChanging(value);
					this.SendPropertyChanging();
					this._RDI = value;
					this.SendPropertyChanged("RDI");
					this.OnRDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldRDI", DbType="SmallInt")]
		public System.Nullable<short> oldRDI
		{
			get
			{
				return this._oldRDI;
			}
			set
			{
				if ((this._oldRDI != value))
				{
					this.OnoldRDIChanging(value);
					this.SendPropertyChanging();
					this._oldRDI = value;
					this.SendPropertyChanged("oldRDI");
					this.OnoldRDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDaysToEndOfDHPeriod", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TotalDaysToEndOfDHPeriod
		{
			get
			{
				return this._TotalDaysToEndOfDHPeriod;
			}
			set
			{
				if ((this._TotalDaysToEndOfDHPeriod != value))
				{
					this.OnTotalDaysToEndOfDHPeriodChanging(value);
					this.SendPropertyChanging();
					this._TotalDaysToEndOfDHPeriod = value;
					this.SendPropertyChanged("TotalDaysToEndOfDHPeriod");
					this.OnTotalDaysToEndOfDHPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASUCompletionDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> PASUCompletionDays
		{
			get
			{
				return this._PASUCompletionDays;
			}
			set
			{
				if ((this._PASUCompletionDays != value))
				{
					this.OnPASUCompletionDaysChanging(value);
					this.SendPropertyChanging();
					this._PASUCompletionDays = value;
					this.SendPropertyChanged("PASUCompletionDays");
					this.OnPASUCompletionDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> CompletionDays
		{
			get
			{
				return this._CompletionDays;
			}
			set
			{
				if ((this._CompletionDays != value))
				{
					this.OnCompletionDaysChanging(value);
					this.SendPropertyChanging();
					this._CompletionDays = value;
					this.SendPropertyChanged("CompletionDays");
					this.OnCompletionDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigContractorIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> RigContractorIT
		{
			get
			{
				return this._RigContractorIT;
			}
			set
			{
				if ((this._RigContractorIT != value))
				{
					this.OnRigContractorITChanging(value);
					this.SendPropertyChanging();
					this._RigContractorIT = value;
					this.SendPropertyChanged("RigContractorIT");
					this.OnRigContractorITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCompanyIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ServiceCompanyIT
		{
			get
			{
				return this._ServiceCompanyIT;
			}
			set
			{
				if ((this._ServiceCompanyIT != value))
				{
					this.OnServiceCompanyITChanging(value);
					this.SendPropertyChanging();
					this._ServiceCompanyIT = value;
					this.SendPropertyChanged("ServiceCompanyIT");
					this.OnServiceCompanyITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalProblemsIT", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ExternalProblemsIT
		{
			get
			{
				return this._ExternalProblemsIT;
			}
			set
			{
				if ((this._ExternalProblemsIT != value))
				{
					this.OnExternalProblemsITChanging(value);
					this.SendPropertyChanging();
					this._ExternalProblemsIT = value;
					this.SendPropertyChanged("ExternalProblemsIT");
					this.OnExternalProblemsITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillingContractor", DbType="NVarChar(60)")]
		public string DrillingContractor
		{
			get
			{
				return this._DrillingContractor;
			}
			set
			{
				if ((this._DrillingContractor != value))
				{
					this.OnDrillingContractorChanging(value);
					this.SendPropertyChanging();
					this._DrillingContractor = value;
					this.SendPropertyChanged("DrillingContractor");
					this.OnDrillingContractorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MudWeightUnits", DbType="NVarChar(8)")]
		public string MudWeightUnits
		{
			get
			{
				return this._MudWeightUnits;
			}
			set
			{
				if ((this._MudWeightUnits != value))
				{
					this.OnMudWeightUnitsChanging(value);
					this.SendPropertyChanging();
					this._MudWeightUnits = value;
					this.SendPropertyChanged("MudWeightUnits");
					this.OnMudWeightUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigMoveDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> RigMoveDays
		{
			get
			{
				return this._RigMoveDays;
			}
			set
			{
				if ((this._RigMoveDays != value))
				{
					this.OnRigMoveDaysChanging(value);
					this.SendPropertyChanging();
					this._RigMoveDays = value;
					this.SendPropertyChanged("RigMoveDays");
					this.OnRigMoveDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigMoveInField", DbType="Bit")]
		public System.Nullable<bool> RigMoveInField
		{
			get
			{
				return this._RigMoveInField;
			}
			set
			{
				if ((this._RigMoveInField != value))
				{
					this.OnRigMoveInFieldChanging(value);
					this.SendPropertyChanging();
					this._RigMoveInField = value;
					this.SendPropertyChanged("RigMoveInField");
					this.OnRigMoveInFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherOpsDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> OtherOpsDays
		{
			get
			{
				return this._OtherOpsDays;
			}
			set
			{
				if ((this._OtherOpsDays != value))
				{
					this.OnOtherOpsDaysChanging(value);
					this.SendPropertyChanging();
					this._OtherOpsDays = value;
					this.SendPropertyChanged("OtherOpsDays");
					this.OnOtherOpsDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing1", DbType="VarChar(50)")]
		public string PreExisitingCasing1
		{
			get
			{
				return this._PreExisitingCasing1;
			}
			set
			{
				if ((this._PreExisitingCasing1 != value))
				{
					this.OnPreExisitingCasing1Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing1 = value;
					this.SendPropertyChanged("PreExisitingCasing1");
					this.OnPreExisitingCasing1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing2", DbType="VarChar(50)")]
		public string PreExisitingCasing2
		{
			get
			{
				return this._PreExisitingCasing2;
			}
			set
			{
				if ((this._PreExisitingCasing2 != value))
				{
					this.OnPreExisitingCasing2Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing2 = value;
					this.SendPropertyChanged("PreExisitingCasing2");
					this.OnPreExisitingCasing2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing3", DbType="VarChar(50)")]
		public string PreExisitingCasing3
		{
			get
			{
				return this._PreExisitingCasing3;
			}
			set
			{
				if ((this._PreExisitingCasing3 != value))
				{
					this.OnPreExisitingCasing3Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing3 = value;
					this.SendPropertyChanged("PreExisitingCasing3");
					this.OnPreExisitingCasing3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing4", DbType="VarChar(50)")]
		public string PreExisitingCasing4
		{
			get
			{
				return this._PreExisitingCasing4;
			}
			set
			{
				if ((this._PreExisitingCasing4 != value))
				{
					this.OnPreExisitingCasing4Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing4 = value;
					this.SendPropertyChanged("PreExisitingCasing4");
					this.OnPreExisitingCasing4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing5", DbType="VarChar(50)")]
		public string PreExisitingCasing5
		{
			get
			{
				return this._PreExisitingCasing5;
			}
			set
			{
				if ((this._PreExisitingCasing5 != value))
				{
					this.OnPreExisitingCasing5Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing5 = value;
					this.SendPropertyChanged("PreExisitingCasing5");
					this.OnPreExisitingCasing5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing6", DbType="VarChar(50)")]
		public string PreExisitingCasing6
		{
			get
			{
				return this._PreExisitingCasing6;
			}
			set
			{
				if ((this._PreExisitingCasing6 != value))
				{
					this.OnPreExisitingCasing6Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing6 = value;
					this.SendPropertyChanged("PreExisitingCasing6");
					this.OnPreExisitingCasing6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing7", DbType="VarChar(50)")]
		public string PreExisitingCasing7
		{
			get
			{
				return this._PreExisitingCasing7;
			}
			set
			{
				if ((this._PreExisitingCasing7 != value))
				{
					this.OnPreExisitingCasing7Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing7 = value;
					this.SendPropertyChanged("PreExisitingCasing7");
					this.OnPreExisitingCasing7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing8", DbType="VarChar(50)")]
		public string PreExisitingCasing8
		{
			get
			{
				return this._PreExisitingCasing8;
			}
			set
			{
				if ((this._PreExisitingCasing8 != value))
				{
					this.OnPreExisitingCasing8Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing8 = value;
					this.SendPropertyChanged("PreExisitingCasing8");
					this.OnPreExisitingCasing8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing9", DbType="VarChar(50)")]
		public string PreExisitingCasing9
		{
			get
			{
				return this._PreExisitingCasing9;
			}
			set
			{
				if ((this._PreExisitingCasing9 != value))
				{
					this.OnPreExisitingCasing9Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing9 = value;
					this.SendPropertyChanged("PreExisitingCasing9");
					this.OnPreExisitingCasing9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExisitingCasing10", DbType="VarChar(50)")]
		public string PreExisitingCasing10
		{
			get
			{
				return this._PreExisitingCasing10;
			}
			set
			{
				if ((this._PreExisitingCasing10 != value))
				{
					this.OnPreExisitingCasing10Changing(value);
					this.SendPropertyChanging();
					this._PreExisitingCasing10 = value;
					this.SendPropertyChanged("PreExisitingCasing10");
					this.OnPreExisitingCasing10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreExistingCasing11", DbType="VarChar(50)")]
		public string PreExistingCasing11
		{
			get
			{
				return this._PreExistingCasing11;
			}
			set
			{
				if ((this._PreExistingCasing11 != value))
				{
					this.OnPreExistingCasing11Changing(value);
					this.SendPropertyChanging();
					this._PreExistingCasing11 = value;
					this.SendPropertyChanged("PreExistingCasing11");
					this.OnPreExistingCasing11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConductorCasing", DbType="VarChar(50)")]
		public string ConductorCasing
		{
			get
			{
				return this._ConductorCasing;
			}
			set
			{
				if ((this._ConductorCasing != value))
				{
					this.OnConductorCasingChanging(value);
					this.SendPropertyChanging();
					this._ConductorCasing = value;
					this.SendPropertyChanged("ConductorCasing");
					this.OnConductorCasingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitConductor", DbType="TinyInt")]
		public System.Nullable<byte> SplitConductor
		{
			get
			{
				return this._SplitConductor;
			}
			set
			{
				if ((this._SplitConductor != value))
				{
					this.OnSplitConductorChanging(value);
					this.SendPropertyChanging();
					this._SplitConductor = value;
					this.SendPropertyChanged("SplitConductor");
					this.OnSplitConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandableCasingCount", DbType="TinyInt")]
		public System.Nullable<byte> ExpandableCasingCount
		{
			get
			{
				return this._ExpandableCasingCount;
			}
			set
			{
				if ((this._ExpandableCasingCount != value))
				{
					this.OnExpandableCasingCountChanging(value);
					this.SendPropertyChanging();
					this._ExpandableCasingCount = value;
					this.SendPropertyChanged("ExpandableCasingCount");
					this.OnExpandableCasingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing1", DbType="VarChar(50)")]
		public string NewCasing1
		{
			get
			{
				return this._NewCasing1;
			}
			set
			{
				if ((this._NewCasing1 != value))
				{
					this.OnNewCasing1Changing(value);
					this.SendPropertyChanging();
					this._NewCasing1 = value;
					this.SendPropertyChanged("NewCasing1");
					this.OnNewCasing1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing2", DbType="VarChar(50)")]
		public string NewCasing2
		{
			get
			{
				return this._NewCasing2;
			}
			set
			{
				if ((this._NewCasing2 != value))
				{
					this.OnNewCasing2Changing(value);
					this.SendPropertyChanging();
					this._NewCasing2 = value;
					this.SendPropertyChanged("NewCasing2");
					this.OnNewCasing2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing3", DbType="VarChar(50)")]
		public string NewCasing3
		{
			get
			{
				return this._NewCasing3;
			}
			set
			{
				if ((this._NewCasing3 != value))
				{
					this.OnNewCasing3Changing(value);
					this.SendPropertyChanging();
					this._NewCasing3 = value;
					this.SendPropertyChanged("NewCasing3");
					this.OnNewCasing3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing4", DbType="VarChar(50)")]
		public string NewCasing4
		{
			get
			{
				return this._NewCasing4;
			}
			set
			{
				if ((this._NewCasing4 != value))
				{
					this.OnNewCasing4Changing(value);
					this.SendPropertyChanging();
					this._NewCasing4 = value;
					this.SendPropertyChanged("NewCasing4");
					this.OnNewCasing4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing5", DbType="VarChar(50)")]
		public string NewCasing5
		{
			get
			{
				return this._NewCasing5;
			}
			set
			{
				if ((this._NewCasing5 != value))
				{
					this.OnNewCasing5Changing(value);
					this.SendPropertyChanging();
					this._NewCasing5 = value;
					this.SendPropertyChanged("NewCasing5");
					this.OnNewCasing5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing6", DbType="VarChar(50)")]
		public string NewCasing6
		{
			get
			{
				return this._NewCasing6;
			}
			set
			{
				if ((this._NewCasing6 != value))
				{
					this.OnNewCasing6Changing(value);
					this.SendPropertyChanging();
					this._NewCasing6 = value;
					this.SendPropertyChanged("NewCasing6");
					this.OnNewCasing6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing7", DbType="VarChar(50)")]
		public string NewCasing7
		{
			get
			{
				return this._NewCasing7;
			}
			set
			{
				if ((this._NewCasing7 != value))
				{
					this.OnNewCasing7Changing(value);
					this.SendPropertyChanging();
					this._NewCasing7 = value;
					this.SendPropertyChanged("NewCasing7");
					this.OnNewCasing7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing8", DbType="VarChar(50)")]
		public string NewCasing8
		{
			get
			{
				return this._NewCasing8;
			}
			set
			{
				if ((this._NewCasing8 != value))
				{
					this.OnNewCasing8Changing(value);
					this.SendPropertyChanging();
					this._NewCasing8 = value;
					this.SendPropertyChanged("NewCasing8");
					this.OnNewCasing8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing9", DbType="VarChar(50)")]
		public string NewCasing9
		{
			get
			{
				return this._NewCasing9;
			}
			set
			{
				if ((this._NewCasing9 != value))
				{
					this.OnNewCasing9Changing(value);
					this.SendPropertyChanging();
					this._NewCasing9 = value;
					this.SendPropertyChanged("NewCasing9");
					this.OnNewCasing9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCasing10", DbType="VarChar(50)")]
		public string NewCasing10
		{
			get
			{
				return this._NewCasing10;
			}
			set
			{
				if ((this._NewCasing10 != value))
				{
					this.OnNewCasing10Changing(value);
					this.SendPropertyChanging();
					this._NewCasing10 = value;
					this.SendPropertyChanged("NewCasing10");
					this.OnNewCasing10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CasingDrilled", DbType="VarChar(2)")]
		public string CasingDrilled
		{
			get
			{
				return this._CasingDrilled;
			}
			set
			{
				if ((this._CasingDrilled != value))
				{
					this.OnCasingDrilledChanging(value);
					this.SendPropertyChanging();
					this._CasingDrilled = value;
					this.SendPropertyChanged("CasingDrilled");
					this.OnCasingDrilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHDaysExCorLogUReam1000m", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> DHDaysExCorLogUReam1000m
		{
			get
			{
				return this._DHDaysExCorLogUReam1000m;
			}
			set
			{
				if ((this._DHDaysExCorLogUReam1000m != value))
				{
					this.OnDHDaysExCorLogUReam1000mChanging(value);
					this.SendPropertyChanging();
					this._DHDaysExCorLogUReam1000m = value;
					this.SendPropertyChanged("DHDaysExCorLogUReam1000m");
					this.OnDHDaysExCorLogUReam1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigMoorSystem", DbType="VarChar(20)")]
		public string RigMoorSystem
		{
			get
			{
				return this._RigMoorSystem;
			}
			set
			{
				if ((this._RigMoorSystem != value))
				{
					this.OnRigMoorSystemChanging(value);
					this.SendPropertyChanging();
					this._RigMoorSystem = value;
					this.SendPropertyChanged("RigMoorSystem");
					this.OnRigMoorSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoorDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> MoorDays
		{
			get
			{
				return this._MoorDays;
			}
			set
			{
				if ((this._MoorDays != value))
				{
					this.OnMoorDaysChanging(value);
					this.SendPropertyChanging();
					this._MoorDays = value;
					this.SendPropertyChanged("MoorDays");
					this.OnMoorDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeMoorDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> DeMoorDays
		{
			get
			{
				return this._DeMoorDays;
			}
			set
			{
				if ((this._DeMoorDays != value))
				{
					this.OnDeMoorDaysChanging(value);
					this.SendPropertyChanging();
					this._DeMoorDays = value;
					this.SendPropertyChanged("DeMoorDays");
					this.OnDeMoorDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWMoorDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWMoorDays
		{
			get
			{
				return this._WOWMoorDays;
			}
			set
			{
				if ((this._WOWMoorDays != value))
				{
					this.OnWOWMoorDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWMoorDays = value;
					this.SendPropertyChanged("WOWMoorDays");
					this.OnWOWMoorDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWDeMoorDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWDeMoorDays
		{
			get
			{
				return this._WOWDeMoorDays;
			}
			set
			{
				if ((this._WOWDeMoorDays != value))
				{
					this.OnWOWDeMoorDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWDeMoorDays = value;
					this.SendPropertyChanged("WOWDeMoorDays");
					this.OnWOWDeMoorDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfWellOpsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOfWellOpsDate
		{
			get
			{
				return this._EndOfWellOpsDate;
			}
			set
			{
				if ((this._EndOfWellOpsDate != value))
				{
					this.OnEndOfWellOpsDateChanging(value);
					this.SendPropertyChanging();
					this._EndOfWellOpsDate = value;
					this.SendPropertyChanged("EndOfWellOpsDate");
					this.OnEndOfWellOpsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOWBeforeDeMoorDays", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WOWBeforeDeMoorDays
		{
			get
			{
				return this._WOWBeforeDeMoorDays;
			}
			set
			{
				if ((this._WOWBeforeDeMoorDays != value))
				{
					this.OnWOWBeforeDeMoorDaysChanging(value);
					this.SendPropertyChanging();
					this._WOWBeforeDeMoorDays = value;
					this.SendPropertyChanged("WOWBeforeDeMoorDays");
					this.OnWOWBeforeDeMoorDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APINumber", DbType="VarChar(20)")]
		public string APINumber
		{
			get
			{
				return this._APINumber;
			}
			set
			{
				if ((this._APINumber != value))
				{
					this.OnAPINumberChanging(value);
					this.SendPropertyChanging();
					this._APINumber = value;
					this.SendPropertyChanged("APINumber");
					this.OnAPINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subsalt", DbType="TinyInt")]
		public System.Nullable<byte> Subsalt
		{
			get
			{
				return this._Subsalt;
			}
			set
			{
				if ((this._Subsalt != value))
				{
					this.OnSubsaltChanging(value);
					this.SendPropertyChanging();
					this._Subsalt = value;
					this.SendPropertyChanged("Subsalt");
					this.OnSubsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TVDSaltStart", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TVDSaltStart
		{
			get
			{
				return this._TVDSaltStart;
			}
			set
			{
				if ((this._TVDSaltStart != value))
				{
					this.OnTVDSaltStartChanging(value);
					this.SendPropertyChanging();
					this._TVDSaltStart = value;
					this.SendPropertyChanged("TVDSaltStart");
					this.OnTVDSaltStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TVDSaltEnd", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> TVDSaltEnd
		{
			get
			{
				return this._TVDSaltEnd;
			}
			set
			{
				if ((this._TVDSaltEnd != value))
				{
					this.OnTVDSaltEndChanging(value);
					this.SendPropertyChanging();
					this._TVDSaltEnd = value;
					this.SendPropertyChanged("TVDSaltEnd");
					this.OnTVDSaltEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHDaysExCorLog1000m", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> DHDaysExCorLog1000m
		{
			get
			{
				return this._DHDaysExCorLog1000m;
			}
			set
			{
				if ((this._DHDaysExCorLog1000m != value))
				{
					this.OnDHDaysExCorLog1000mChanging(value);
					this.SendPropertyChanging();
					this._DHDaysExCorLog1000m = value;
					this.SendPropertyChanged("DHDaysExCorLog1000m");
					this.OnDHDaysExCorLog1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHDaysExCorLog", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> DHDaysExCorLog
		{
			get
			{
				return this._DHDaysExCorLog;
			}
			set
			{
				if ((this._DHDaysExCorLog != value))
				{
					this.OnDHDaysExCorLogChanging(value);
					this.SendPropertyChanging();
					this._DHDaysExCorLog = value;
					this.SendPropertyChanged("DHDaysExCorLog");
					this.OnDHDaysExCorLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetresPerDayExCorLog", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> MetresPerDayExCorLog
		{
			get
			{
				return this._MetresPerDayExCorLog;
			}
			set
			{
				if ((this._MetresPerDayExCorLog != value))
				{
					this.OnMetresPerDayExCorLogChanging(value);
					this.SendPropertyChanging();
					this._MetresPerDayExCorLog = value;
					this.SendPropertyChanged("MetresPerDayExCorLog");
					this.OnMetresPerDayExCorLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPT1000m", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> NPT1000m
		{
			get
			{
				return this._NPT1000m;
			}
			set
			{
				if ((this._NPT1000m != value))
				{
					this.OnNPT1000mChanging(value);
					this.SendPropertyChanging();
					this._NPT1000m = value;
					this.SendPropertyChanged("NPT1000m");
					this.OnNPT1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOW1000m", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> WOW1000m
		{
			get
			{
				return this._WOW1000m;
			}
			set
			{
				if ((this._WOW1000m != value))
				{
					this.OnWOW1000mChanging(value);
					this.SendPropertyChanging();
					this._WOW1000m = value;
					this.SendPropertyChanged("WOW1000m");
					this.OnWOW1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductiveDays1000m", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> ProductiveDays1000m
		{
			get
			{
				return this._ProductiveDays1000m;
			}
			set
			{
				if ((this._ProductiveDays1000m != value))
				{
					this.OnProductiveDays1000mChanging(value);
					this.SendPropertyChanging();
					this._ProductiveDays1000m = value;
					this.SendPropertyChanged("ProductiveDays1000m");
					this.OnProductiveDays1000mChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcProductiveDays", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> CalcProductiveDays
		{
			get
			{
				return this._CalcProductiveDays;
			}
			set
			{
				if ((this._CalcProductiveDays != value))
				{
					this.OnCalcProductiveDaysChanging(value);
					this.SendPropertyChanging();
					this._CalcProductiveDays = value;
					this.SendPropertyChanged("CalcProductiveDays");
					this.OnCalcProductiveDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeothermalType", DbType="VarChar(2)")]
		public string GeothermalType
		{
			get
			{
				return this._GeothermalType;
			}
			set
			{
				if ((this._GeothermalType != value))
				{
					this.OnGeothermalTypeChanging(value);
					this.SendPropertyChanging();
					this._GeothermalType = value;
					this.SendPropertyChanged("GeothermalType");
					this.OnGeothermalTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLkp_RigType")]
	public partial class tLkp_RigType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RigTypeID;
		
		private string _RigType;
		
		private string _RigTypeCode;
		
		private string _RigGroupCode;
		
		private System.Nullable<decimal> _DrillingSpeedMin;
		
		private System.Nullable<decimal> _DrillingSpeedMax;
		
		private System.Nullable<decimal> _DryHoleDaysMin;
		
		private System.Nullable<decimal> _DryHoleDaysMax;
		
		private System.Nullable<decimal> _DHCostPerDrilledIntMin;
		
		private System.Nullable<decimal> _DHCostPerDrilledIntMax;
		
		private System.Nullable<decimal> _DHCostPerDayMin;
		
		private System.Nullable<decimal> _DHCostPerDayMax;
		
		private System.Nullable<decimal> _TotCostPerDayMin;
		
		private System.Nullable<decimal> _TotCostPerDayMax;
		
		private System.Nullable<decimal> _WaterDepthMin;
		
		private System.Nullable<decimal> _WaterDepthMax;
		
		private EntitySet<tLnk_RigNameType> _tLnk_RigNameTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRigTypeIDChanging(int value);
    partial void OnRigTypeIDChanged();
    partial void OnRigTypeChanging(string value);
    partial void OnRigTypeChanged();
    partial void OnRigTypeCodeChanging(string value);
    partial void OnRigTypeCodeChanged();
    partial void OnRigGroupCodeChanging(string value);
    partial void OnRigGroupCodeChanged();
    partial void OnDrillingSpeedMinChanging(System.Nullable<decimal> value);
    partial void OnDrillingSpeedMinChanged();
    partial void OnDrillingSpeedMaxChanging(System.Nullable<decimal> value);
    partial void OnDrillingSpeedMaxChanged();
    partial void OnDryHoleDaysMinChanging(System.Nullable<decimal> value);
    partial void OnDryHoleDaysMinChanged();
    partial void OnDryHoleDaysMaxChanging(System.Nullable<decimal> value);
    partial void OnDryHoleDaysMaxChanged();
    partial void OnDHCostPerDrilledIntMinChanging(System.Nullable<decimal> value);
    partial void OnDHCostPerDrilledIntMinChanged();
    partial void OnDHCostPerDrilledIntMaxChanging(System.Nullable<decimal> value);
    partial void OnDHCostPerDrilledIntMaxChanged();
    partial void OnDHCostPerDayMinChanging(System.Nullable<decimal> value);
    partial void OnDHCostPerDayMinChanged();
    partial void OnDHCostPerDayMaxChanging(System.Nullable<decimal> value);
    partial void OnDHCostPerDayMaxChanged();
    partial void OnTotCostPerDayMinChanging(System.Nullable<decimal> value);
    partial void OnTotCostPerDayMinChanged();
    partial void OnTotCostPerDayMaxChanging(System.Nullable<decimal> value);
    partial void OnTotCostPerDayMaxChanged();
    partial void OnWaterDepthMinChanging(System.Nullable<decimal> value);
    partial void OnWaterDepthMinChanged();
    partial void OnWaterDepthMaxChanging(System.Nullable<decimal> value);
    partial void OnWaterDepthMaxChanged();
    #endregion
		
		public tLkp_RigType()
		{
			this._tLnk_RigNameTypes = new EntitySet<tLnk_RigNameType>(new Action<tLnk_RigNameType>(this.attach_tLnk_RigNameTypes), new Action<tLnk_RigNameType>(this.detach_tLnk_RigNameTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RigTypeID
		{
			get
			{
				return this._RigTypeID;
			}
			set
			{
				if ((this._RigTypeID != value))
				{
					this.OnRigTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RigTypeID = value;
					this.SendPropertyChanged("RigTypeID");
					this.OnRigTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RigType
		{
			get
			{
				return this._RigType;
			}
			set
			{
				if ((this._RigType != value))
				{
					this.OnRigTypeChanging(value);
					this.SendPropertyChanging();
					this._RigType = value;
					this.SendPropertyChanged("RigType");
					this.OnRigTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigTypeCode", DbType="NVarChar(50)")]
		public string RigTypeCode
		{
			get
			{
				return this._RigTypeCode;
			}
			set
			{
				if ((this._RigTypeCode != value))
				{
					this.OnRigTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._RigTypeCode = value;
					this.SendPropertyChanged("RigTypeCode");
					this.OnRigTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigGroupCode", DbType="VarChar(50)")]
		public string RigGroupCode
		{
			get
			{
				return this._RigGroupCode;
			}
			set
			{
				if ((this._RigGroupCode != value))
				{
					this.OnRigGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._RigGroupCode = value;
					this.SendPropertyChanged("RigGroupCode");
					this.OnRigGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillingSpeedMin", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> DrillingSpeedMin
		{
			get
			{
				return this._DrillingSpeedMin;
			}
			set
			{
				if ((this._DrillingSpeedMin != value))
				{
					this.OnDrillingSpeedMinChanging(value);
					this.SendPropertyChanging();
					this._DrillingSpeedMin = value;
					this.SendPropertyChanged("DrillingSpeedMin");
					this.OnDrillingSpeedMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillingSpeedMax", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> DrillingSpeedMax
		{
			get
			{
				return this._DrillingSpeedMax;
			}
			set
			{
				if ((this._DrillingSpeedMax != value))
				{
					this.OnDrillingSpeedMaxChanging(value);
					this.SendPropertyChanging();
					this._DrillingSpeedMax = value;
					this.SendPropertyChanged("DrillingSpeedMax");
					this.OnDrillingSpeedMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DryHoleDaysMin", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> DryHoleDaysMin
		{
			get
			{
				return this._DryHoleDaysMin;
			}
			set
			{
				if ((this._DryHoleDaysMin != value))
				{
					this.OnDryHoleDaysMinChanging(value);
					this.SendPropertyChanging();
					this._DryHoleDaysMin = value;
					this.SendPropertyChanged("DryHoleDaysMin");
					this.OnDryHoleDaysMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DryHoleDaysMax", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> DryHoleDaysMax
		{
			get
			{
				return this._DryHoleDaysMax;
			}
			set
			{
				if ((this._DryHoleDaysMax != value))
				{
					this.OnDryHoleDaysMaxChanging(value);
					this.SendPropertyChanging();
					this._DryHoleDaysMax = value;
					this.SendPropertyChanged("DryHoleDaysMax");
					this.OnDryHoleDaysMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHCostPerDrilledIntMin", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> DHCostPerDrilledIntMin
		{
			get
			{
				return this._DHCostPerDrilledIntMin;
			}
			set
			{
				if ((this._DHCostPerDrilledIntMin != value))
				{
					this.OnDHCostPerDrilledIntMinChanging(value);
					this.SendPropertyChanging();
					this._DHCostPerDrilledIntMin = value;
					this.SendPropertyChanged("DHCostPerDrilledIntMin");
					this.OnDHCostPerDrilledIntMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHCostPerDrilledIntMax", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> DHCostPerDrilledIntMax
		{
			get
			{
				return this._DHCostPerDrilledIntMax;
			}
			set
			{
				if ((this._DHCostPerDrilledIntMax != value))
				{
					this.OnDHCostPerDrilledIntMaxChanging(value);
					this.SendPropertyChanging();
					this._DHCostPerDrilledIntMax = value;
					this.SendPropertyChanged("DHCostPerDrilledIntMax");
					this.OnDHCostPerDrilledIntMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHCostPerDayMin", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> DHCostPerDayMin
		{
			get
			{
				return this._DHCostPerDayMin;
			}
			set
			{
				if ((this._DHCostPerDayMin != value))
				{
					this.OnDHCostPerDayMinChanging(value);
					this.SendPropertyChanging();
					this._DHCostPerDayMin = value;
					this.SendPropertyChanged("DHCostPerDayMin");
					this.OnDHCostPerDayMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHCostPerDayMax", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> DHCostPerDayMax
		{
			get
			{
				return this._DHCostPerDayMax;
			}
			set
			{
				if ((this._DHCostPerDayMax != value))
				{
					this.OnDHCostPerDayMaxChanging(value);
					this.SendPropertyChanging();
					this._DHCostPerDayMax = value;
					this.SendPropertyChanged("DHCostPerDayMax");
					this.OnDHCostPerDayMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotCostPerDayMin", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> TotCostPerDayMin
		{
			get
			{
				return this._TotCostPerDayMin;
			}
			set
			{
				if ((this._TotCostPerDayMin != value))
				{
					this.OnTotCostPerDayMinChanging(value);
					this.SendPropertyChanging();
					this._TotCostPerDayMin = value;
					this.SendPropertyChanged("TotCostPerDayMin");
					this.OnTotCostPerDayMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotCostPerDayMax", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> TotCostPerDayMax
		{
			get
			{
				return this._TotCostPerDayMax;
			}
			set
			{
				if ((this._TotCostPerDayMax != value))
				{
					this.OnTotCostPerDayMaxChanging(value);
					this.SendPropertyChanging();
					this._TotCostPerDayMax = value;
					this.SendPropertyChanged("TotCostPerDayMax");
					this.OnTotCostPerDayMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterDepthMin", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> WaterDepthMin
		{
			get
			{
				return this._WaterDepthMin;
			}
			set
			{
				if ((this._WaterDepthMin != value))
				{
					this.OnWaterDepthMinChanging(value);
					this.SendPropertyChanging();
					this._WaterDepthMin = value;
					this.SendPropertyChanged("WaterDepthMin");
					this.OnWaterDepthMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterDepthMax", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> WaterDepthMax
		{
			get
			{
				return this._WaterDepthMax;
			}
			set
			{
				if ((this._WaterDepthMax != value))
				{
					this.OnWaterDepthMaxChanging(value);
					this.SendPropertyChanging();
					this._WaterDepthMax = value;
					this.SendPropertyChanged("WaterDepthMax");
					this.OnWaterDepthMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLkp_RigType1_tLnk_RigNameType", Storage="_tLnk_RigNameTypes", ThisKey="RigTypeID", OtherKey="RigTypeID")]
		public EntitySet<tLnk_RigNameType> tLnk_RigNameTypes
		{
			get
			{
				return this._tLnk_RigNameTypes;
			}
			set
			{
				this._tLnk_RigNameTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tLnk_RigNameTypes(tLnk_RigNameType entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_RigType = this;
		}
		
		private void detach_tLnk_RigNameTypes(tLnk_RigNameType entity)
		{
			this.SendPropertyChanging();
			entity.tLkp_RigType = null;
		}
	}
}
#pragma warning restore 1591
